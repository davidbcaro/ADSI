/*
 * This source file was generated by FireStorm/DAO.
 * 
 * If you purchase a full license for FireStorm/DAO you can customize this header file.
 * 
 * For more information please visit http://www.codefutures.com/products/firestorm
 */

package co.edu.sena.model.dao.example;

import java.math.*;
import java.util.Date;
import java.util.Collection;
import co.edu.sena.model.dao.dao.ScheduleDao;
import co.edu.sena.model.dao.dto.Schedule;
import co.edu.sena.model.dao.exceptions.ScheduleDaoException;
import co.edu.sena.model.dao.factory.ScheduleDaoFactory;

public class ScheduleDaoSample
{
	/**
	 * Method 'main'
	 * 
	 * @param arg
	 * @throws Exception
	 */
	public static void main(String[] arg) throws Exception
	{
		// Uncomment one of the lines below to test the generated code
		
		 findAll();
		// findByDay("");
		// findByEnvironment("", "");
		// findByModality("");
		// findByNumberGroupHasTrimester("", "", "");
		// findByTeacher("", "");
		// findByVersion(0, "");
		// findWhereStartTimeEquals("");
		// findWhereEndTimeEquals("");
		// findWhereNameTrimesterEquals("");
		// findWhereNumberGroupEquals("");
		// findWhereInitialsWorkingDayEquals("");
		// findWhereDocumentNumberEquals("");
		// findWhereIdDocumentEquals("");
		// findWhereNameDayEquals("");
		// findWhereNameModalityEquals("");
		// findWhereNumberEnvironmentEquals("");
		// findWhereNameHeadquartersEquals("");
		// findWhereIdVersionEquals(0);
		// findWhereIdCurrentQuarterEquals("");
	}

	/**
	 * Method 'findAll'
	 * 
	 */
	public static void findAll()
	{
		try {
			ScheduleDao _dao = getScheduleDao();
			Schedule _result[] = _dao.findAll();
			for (int i=0; i<_result.length; i++ ) {
				display( _result[i] );
			}
		
		}
		catch (Exception _e) {
			_e.printStackTrace();
		}
		
	}

	/**
	 * Method 'findByDay'
	 * 
	 * @param nameDay
	 */
	public static void findByDay(String nameDay)
	{
		try {
			ScheduleDao _dao = getScheduleDao();
			Schedule _result[] = _dao.findByDay(nameDay);
			for (int i=0; i<_result.length; i++ ) {
				display( _result[i] );
			}
		
		}
		catch (Exception _e) {
			_e.printStackTrace();
		}
		
	}

	/**
	 * Method 'findByEnvironment'
	 * 
	 * @param numberEnvironment
	 * @param nameHeadquarters
	 */
	public static void findByEnvironment(String numberEnvironment, String nameHeadquarters)
	{
		try {
			ScheduleDao _dao = getScheduleDao();
			Schedule _result[] = _dao.findByEnvironment(numberEnvironment, nameHeadquarters);
			for (int i=0; i<_result.length; i++ ) {
				display( _result[i] );
			}
		
		}
		catch (Exception _e) {
			_e.printStackTrace();
		}
		
	}

	/**
	 * Method 'findByModality'
	 * 
	 * @param nameModality
	 */
	public static void findByModality(String nameModality)
	{
		try {
			ScheduleDao _dao = getScheduleDao();
			Schedule _result[] = _dao.findByModality(nameModality);
			for (int i=0; i<_result.length; i++ ) {
				display( _result[i] );
			}
		
		}
		catch (Exception _e) {
			_e.printStackTrace();
		}
		
	}

	/**
	 * Method 'findByNumberGroupHasTrimester'
	 * 
	 * @param numberGroup
	 * @param nameTrimester
	 * @param initialsWorkingDay
	 */
	public static void findByNumberGroupHasTrimester(String numberGroup, String nameTrimester, String initialsWorkingDay)
	{
		try {
			ScheduleDao _dao = getScheduleDao();
			Schedule _result[] = _dao.findByNumberGroupHasTrimester(numberGroup, nameTrimester, initialsWorkingDay);
			for (int i=0; i<_result.length; i++ ) {
				display( _result[i] );
			}
		
		}
		catch (Exception _e) {
			_e.printStackTrace();
		}
		
	}

	/**
	 * Method 'findByTeacher'
	 * 
	 * @param idDocument
	 * @param documentNumber
	 */
	public static void findByTeacher(String idDocument, String documentNumber)
	{
		try {
			ScheduleDao _dao = getScheduleDao();
			Schedule _result[] = _dao.findByTeacher(idDocument, documentNumber);
			for (int i=0; i<_result.length; i++ ) {
				display( _result[i] );
			}
		
		}
		catch (Exception _e) {
			_e.printStackTrace();
		}
		
	}

	/**
	 * Method 'findByVersion'
	 * 
	 * @param idVersion
	 * @param idCurrentQuarter
	 */
	public static void findByVersion(int idVersion, String idCurrentQuarter)
	{
		try {
			ScheduleDao _dao = getScheduleDao();
			Schedule _result[] = _dao.findByVersion(idVersion, idCurrentQuarter);
			for (int i=0; i<_result.length; i++ ) {
				display( _result[i] );
			}
		
		}
		catch (Exception _e) {
			_e.printStackTrace();
		}
		
	}

	/**
	 * Method 'findWhereStartTimeEquals'
	 * 
	 * @param startTime
	 */
	public static void findWhereStartTimeEquals(String startTime)
	{
		try {
			ScheduleDao _dao = getScheduleDao();
			Schedule _result[] = _dao.findWhereStartTimeEquals(startTime);
			for (int i=0; i<_result.length; i++ ) {
				display( _result[i] );
			}
		
		}
		catch (Exception _e) {
			_e.printStackTrace();
		}
		
	}

	/**
	 * Method 'findWhereEndTimeEquals'
	 * 
	 * @param endTime
	 */
	public static void findWhereEndTimeEquals(String endTime)
	{
		try {
			ScheduleDao _dao = getScheduleDao();
			Schedule _result[] = _dao.findWhereEndTimeEquals(endTime);
			for (int i=0; i<_result.length; i++ ) {
				display( _result[i] );
			}
		
		}
		catch (Exception _e) {
			_e.printStackTrace();
		}
		
	}

	/**
	 * Method 'findWhereNameTrimesterEquals'
	 * 
	 * @param nameTrimester
	 */
	public static void findWhereNameTrimesterEquals(String nameTrimester)
	{
		try {
			ScheduleDao _dao = getScheduleDao();
			Schedule _result[] = _dao.findWhereNameTrimesterEquals(nameTrimester);
			for (int i=0; i<_result.length; i++ ) {
				display( _result[i] );
			}
		
		}
		catch (Exception _e) {
			_e.printStackTrace();
		}
		
	}

	/**
	 * Method 'findWhereNumberGroupEquals'
	 * 
	 * @param numberGroup
	 */
	public static void findWhereNumberGroupEquals(String numberGroup)
	{
		try {
			ScheduleDao _dao = getScheduleDao();
			Schedule _result[] = _dao.findWhereNumberGroupEquals(numberGroup);
			for (int i=0; i<_result.length; i++ ) {
				display( _result[i] );
			}
		
		}
		catch (Exception _e) {
			_e.printStackTrace();
		}
		
	}

	/**
	 * Method 'findWhereInitialsWorkingDayEquals'
	 * 
	 * @param initialsWorkingDay
	 */
	public static void findWhereInitialsWorkingDayEquals(String initialsWorkingDay)
	{
		try {
			ScheduleDao _dao = getScheduleDao();
			Schedule _result[] = _dao.findWhereInitialsWorkingDayEquals(initialsWorkingDay);
			for (int i=0; i<_result.length; i++ ) {
				display( _result[i] );
			}
		
		}
		catch (Exception _e) {
			_e.printStackTrace();
		}
		
	}

	/**
	 * Method 'findWhereDocumentNumberEquals'
	 * 
	 * @param documentNumber
	 */
	public static void findWhereDocumentNumberEquals(String documentNumber)
	{
		try {
			ScheduleDao _dao = getScheduleDao();
			Schedule _result[] = _dao.findWhereDocumentNumberEquals(documentNumber);
			for (int i=0; i<_result.length; i++ ) {
				display( _result[i] );
			}
		
		}
		catch (Exception _e) {
			_e.printStackTrace();
		}
		
	}

	/**
	 * Method 'findWhereIdDocumentEquals'
	 * 
	 * @param idDocument
	 */
	public static void findWhereIdDocumentEquals(String idDocument)
	{
		try {
			ScheduleDao _dao = getScheduleDao();
			Schedule _result[] = _dao.findWhereIdDocumentEquals(idDocument);
			for (int i=0; i<_result.length; i++ ) {
				display( _result[i] );
			}
		
		}
		catch (Exception _e) {
			_e.printStackTrace();
		}
		
	}

	/**
	 * Method 'findWhereNameDayEquals'
	 * 
	 * @param nameDay
	 */
	public static void findWhereNameDayEquals(String nameDay)
	{
		try {
			ScheduleDao _dao = getScheduleDao();
			Schedule _result[] = _dao.findWhereNameDayEquals(nameDay);
			for (int i=0; i<_result.length; i++ ) {
				display( _result[i] );
			}
		
		}
		catch (Exception _e) {
			_e.printStackTrace();
		}
		
	}

	/**
	 * Method 'findWhereNameModalityEquals'
	 * 
	 * @param nameModality
	 */
	public static void findWhereNameModalityEquals(String nameModality)
	{
		try {
			ScheduleDao _dao = getScheduleDao();
			Schedule _result[] = _dao.findWhereNameModalityEquals(nameModality);
			for (int i=0; i<_result.length; i++ ) {
				display( _result[i] );
			}
		
		}
		catch (Exception _e) {
			_e.printStackTrace();
		}
		
	}

	/**
	 * Method 'findWhereNumberEnvironmentEquals'
	 * 
	 * @param numberEnvironment
	 */
	public static void findWhereNumberEnvironmentEquals(String numberEnvironment)
	{
		try {
			ScheduleDao _dao = getScheduleDao();
			Schedule _result[] = _dao.findWhereNumberEnvironmentEquals(numberEnvironment);
			for (int i=0; i<_result.length; i++ ) {
				display( _result[i] );
			}
		
		}
		catch (Exception _e) {
			_e.printStackTrace();
		}
		
	}

	/**
	 * Method 'findWhereNameHeadquartersEquals'
	 * 
	 * @param nameHeadquarters
	 */
	public static void findWhereNameHeadquartersEquals(String nameHeadquarters)
	{
		try {
			ScheduleDao _dao = getScheduleDao();
			Schedule _result[] = _dao.findWhereNameHeadquartersEquals(nameHeadquarters);
			for (int i=0; i<_result.length; i++ ) {
				display( _result[i] );
			}
		
		}
		catch (Exception _e) {
			_e.printStackTrace();
		}
		
	}

	/**
	 * Method 'findWhereIdVersionEquals'
	 * 
	 * @param idVersion
	 */
	public static void findWhereIdVersionEquals(int idVersion)
	{
		try {
			ScheduleDao _dao = getScheduleDao();
			Schedule _result[] = _dao.findWhereIdVersionEquals(idVersion);
			for (int i=0; i<_result.length; i++ ) {
				display( _result[i] );
			}
		
		}
		catch (Exception _e) {
			_e.printStackTrace();
		}
		
	}

	/**
	 * Method 'findWhereIdCurrentQuarterEquals'
	 * 
	 * @param idCurrentQuarter
	 */
	public static void findWhereIdCurrentQuarterEquals(String idCurrentQuarter)
	{
		try {
			ScheduleDao _dao = getScheduleDao();
			Schedule _result[] = _dao.findWhereIdCurrentQuarterEquals(idCurrentQuarter);
			for (int i=0; i<_result.length; i++ ) {
				display( _result[i] );
			}
		
		}
		catch (Exception _e) {
			_e.printStackTrace();
		}
		
	}

	/**
	 * Method 'getScheduleDao'
	 * 
	 * @return ScheduleDao
	 */
	public static ScheduleDao getScheduleDao()
	{
		return ScheduleDaoFactory.create();
	}

	/**
	 * Method 'display'
	 * 
	 * @param dto
	 */
	public static void display(Schedule dto)
	{
		StringBuffer buf = new StringBuffer();
		buf.append( dto.getStartTime() );
		buf.append( ", " );
		buf.append( dto.getEndTime() );
		buf.append( ", " );
		buf.append( dto.getNameTrimester() );
		buf.append( ", " );
		buf.append( dto.getNumberGroup() );
		buf.append( ", " );
		buf.append( dto.getInitialsWorkingDay() );
		buf.append( ", " );
		buf.append( dto.getDocumentNumber() );
		buf.append( ", " );
		buf.append( dto.getIdDocument() );
		buf.append( ", " );
		buf.append( dto.getNameDay() );
		buf.append( ", " );
		buf.append( dto.getNameModality() );
		buf.append( ", " );
		buf.append( dto.getNumberEnvironment() );
		buf.append( ", " );
		buf.append( dto.getNameHeadquarters() );
		buf.append( ", " );
		buf.append( dto.getIdVersion() );
		buf.append( ", " );
		buf.append( dto.getIdCurrentQuarter() );
		System.out.println( buf.toString() );
	}

}
