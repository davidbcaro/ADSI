/*
 * This source file was generated by FireStorm/DAO.
 * 
 * If you purchase a full license for FireStorm/DAO you can customize this header file.
 * 
 * For more information please visit http://www.codefutures.com/products/firestorm
 */

package co.edu.sena.model.dao.example;

import java.math.*;
import java.util.Date;
import java.util.Collection;
import co.edu.sena.model.dao.dao.RoleHasClientDao;
import co.edu.sena.model.dao.dto.RoleHasClient;
import co.edu.sena.model.dao.exceptions.RoleHasClientDaoException;
import co.edu.sena.model.dao.factory.RoleHasClientDaoFactory;

public class RoleHasClientDaoSample
{
	/**
	 * Method 'main'
	 * 
	 * @param arg
	 * @throws Exception
	 */
	public static void main(String[] arg) throws Exception
	{
		// Uncomment one of the lines below to test the generated code
		
		 findAll();
		// findByRole("");
		// findByClient("", "");
		// findWhereIdDocumentEquals("");
		// findWhereDocumentNumberEquals("");
		// findWhereIdRoleEquals("");
		// findWhereStateEquals(0);
	}

	/**
	 * Method 'findAll'
	 * 
	 */
	public static void findAll()
	{
		try {
			RoleHasClientDao _dao = getRoleHasClientDao();
			RoleHasClient _result[] = _dao.findAll();
			for (int i=0; i<_result.length; i++ ) {
				display( _result[i] );
			}
		
		}
		catch (Exception _e) {
			_e.printStackTrace();
		}
		
	}

	/**
	 * Method 'findByRole'
	 * 
	 * @param idRole
	 */
	public static void findByRole(String idRole)
	{
		try {
			RoleHasClientDao _dao = getRoleHasClientDao();
			RoleHasClient _result[] = _dao.findByRole(idRole);
			for (int i=0; i<_result.length; i++ ) {
				display( _result[i] );
			}
		
		}
		catch (Exception _e) {
			_e.printStackTrace();
		}
		
	}

	/**
	 * Method 'findByClient'
	 * 
	 * @param idDocument
	 * @param documentNumber
	 */
	public static void findByClient(String idDocument, String documentNumber)
	{
		try {
			RoleHasClientDao _dao = getRoleHasClientDao();
			RoleHasClient _result[] = _dao.findByClient(idDocument, documentNumber);
			for (int i=0; i<_result.length; i++ ) {
				display( _result[i] );
			}
		
		}
		catch (Exception _e) {
			_e.printStackTrace();
		}
		
	}

	/**
	 * Method 'findWhereIdDocumentEquals'
	 * 
	 * @param idDocument
	 */
	public static void findWhereIdDocumentEquals(String idDocument)
	{
		try {
			RoleHasClientDao _dao = getRoleHasClientDao();
			RoleHasClient _result[] = _dao.findWhereIdDocumentEquals(idDocument);
			for (int i=0; i<_result.length; i++ ) {
				display( _result[i] );
			}
		
		}
		catch (Exception _e) {
			_e.printStackTrace();
		}
		
	}

	/**
	 * Method 'findWhereDocumentNumberEquals'
	 * 
	 * @param documentNumber
	 */
	public static void findWhereDocumentNumberEquals(String documentNumber)
	{
		try {
			RoleHasClientDao _dao = getRoleHasClientDao();
			RoleHasClient _result[] = _dao.findWhereDocumentNumberEquals(documentNumber);
			for (int i=0; i<_result.length; i++ ) {
				display( _result[i] );
			}
		
		}
		catch (Exception _e) {
			_e.printStackTrace();
		}
		
	}

	/**
	 * Method 'findWhereIdRoleEquals'
	 * 
	 * @param idRole
	 */
	public static void findWhereIdRoleEquals(String idRole)
	{
		try {
			RoleHasClientDao _dao = getRoleHasClientDao();
			RoleHasClient _result[] = _dao.findWhereIdRoleEquals(idRole);
			for (int i=0; i<_result.length; i++ ) {
				display( _result[i] );
			}
		
		}
		catch (Exception _e) {
			_e.printStackTrace();
		}
		
	}

	/**
	 * Method 'findWhereStateEquals'
	 * 
	 * @param state
	 */
	public static void findWhereStateEquals(short state)
	{
		try {
			RoleHasClientDao _dao = getRoleHasClientDao();
			RoleHasClient _result[] = _dao.findWhereStateEquals(state);
			for (int i=0; i<_result.length; i++ ) {
				display( _result[i] );
			}
		
		}
		catch (Exception _e) {
			_e.printStackTrace();
		}
		
	}

	/**
	 * Method 'getRoleHasClientDao'
	 * 
	 * @return RoleHasClientDao
	 */
	public static RoleHasClientDao getRoleHasClientDao()
	{
		return RoleHasClientDaoFactory.create();
	}

	/**
	 * Method 'display'
	 * 
	 * @param dto
	 */
	public static void display(RoleHasClient dto)
	{
		StringBuffer buf = new StringBuffer();
		buf.append( dto.getIdDocument() );
		buf.append( ", " );
		buf.append( dto.getDocumentNumber() );
		buf.append( ", " );
		buf.append( dto.getIdRole() );
		buf.append( ", " );
		buf.append( dto.getState() );
		System.out.println( buf.toString() );
	}

}
