/*
 * This source file was generated by FireStorm/DAO.
 * 
 * If you purchase a full license for FireStorm/DAO you can customize this header file.
 * 
 * For more information please visit http://www.codefutures.com/products/firestorm
 */

package co.edu.sena.model.dao.example;

import java.math.*;
import java.util.Date;
import java.util.Collection;
import co.edu.sena.model.dao.dao.ClientDao;
import co.edu.sena.model.dao.dto.Client;
import co.edu.sena.model.dao.exceptions.ClientDaoException;
import co.edu.sena.model.dao.factory.ClientDaoFactory;

public class ClientDaoSample
{
	/**
	 * Method 'main'
	 * 
	 * @param arg
	 * @throws Exception
	 */
	public static void main(String[] arg) throws Exception
	{
		// Uncomment one of the lines below to test the generated code
		
		 findAll();
		// findByDocument("");
		// findWhereDocumentNumberEquals("");
		// findWhereIdDocumentEquals("");
		// findWhereFirstNameEquals("");
		// findWhereSecondNameEquals("");
		// findWhereFirstLastnameEquals("");
		// findWhereSecondLastnameEquals("");
		// findWherePhotoEquals(null);
	}

	/**
	 * Method 'findAll'
	 * 
	 */
	public static void findAll()
	{
		try {
			ClientDao _dao = getClientDao();
			Client _result[] = _dao.findAll();
			for (int i=0; i<_result.length; i++ ) {
				display( _result[i] );
			}
		
		}
		catch (Exception _e) {
			_e.printStackTrace();
		}
		
	}

	/**
	 * Method 'findByDocument'
	 * 
	 * @param idDocument
	 */
	public static void findByDocument(String idDocument)
	{
		try {
			ClientDao _dao = getClientDao();
			Client _result[] = _dao.findByDocument(idDocument);
			for (int i=0; i<_result.length; i++ ) {
				display( _result[i] );
			}
		
		}
		catch (Exception _e) {
			_e.printStackTrace();
		}
		
	}

	/**
	 * Method 'findWhereDocumentNumberEquals'
	 * 
	 * @param documentNumber
	 */
	public static void findWhereDocumentNumberEquals(String documentNumber)
	{
		try {
			ClientDao _dao = getClientDao();
			Client _result[] = _dao.findWhereDocumentNumberEquals(documentNumber);
			for (int i=0; i<_result.length; i++ ) {
				display( _result[i] );
			}
		
		}
		catch (Exception _e) {
			_e.printStackTrace();
		}
		
	}

	/**
	 * Method 'findWhereIdDocumentEquals'
	 * 
	 * @param idDocument
	 */
	public static void findWhereIdDocumentEquals(String idDocument)
	{
		try {
			ClientDao _dao = getClientDao();
			Client _result[] = _dao.findWhereIdDocumentEquals(idDocument);
			for (int i=0; i<_result.length; i++ ) {
				display( _result[i] );
			}
		
		}
		catch (Exception _e) {
			_e.printStackTrace();
		}
		
	}

	/**
	 * Method 'findWhereFirstNameEquals'
	 * 
	 * @param firstName
	 */
	public static void findWhereFirstNameEquals(String firstName)
	{
		try {
			ClientDao _dao = getClientDao();
			Client _result[] = _dao.findWhereFirstNameEquals(firstName);
			for (int i=0; i<_result.length; i++ ) {
				display( _result[i] );
			}
		
		}
		catch (Exception _e) {
			_e.printStackTrace();
		}
		
	}

	/**
	 * Method 'findWhereSecondNameEquals'
	 * 
	 * @param secondName
	 */
	public static void findWhereSecondNameEquals(String secondName)
	{
		try {
			ClientDao _dao = getClientDao();
			Client _result[] = _dao.findWhereSecondNameEquals(secondName);
			for (int i=0; i<_result.length; i++ ) {
				display( _result[i] );
			}
		
		}
		catch (Exception _e) {
			_e.printStackTrace();
		}
		
	}

	/**
	 * Method 'findWhereFirstLastnameEquals'
	 * 
	 * @param firstLastname
	 */
	public static void findWhereFirstLastnameEquals(String firstLastname)
	{
		try {
			ClientDao _dao = getClientDao();
			Client _result[] = _dao.findWhereFirstLastnameEquals(firstLastname);
			for (int i=0; i<_result.length; i++ ) {
				display( _result[i] );
			}
		
		}
		catch (Exception _e) {
			_e.printStackTrace();
		}
		
	}

	/**
	 * Method 'findWhereSecondLastnameEquals'
	 * 
	 * @param secondLastname
	 */
	public static void findWhereSecondLastnameEquals(String secondLastname)
	{
		try {
			ClientDao _dao = getClientDao();
			Client _result[] = _dao.findWhereSecondLastnameEquals(secondLastname);
			for (int i=0; i<_result.length; i++ ) {
				display( _result[i] );
			}
		
		}
		catch (Exception _e) {
			_e.printStackTrace();
		}
		
	}

	/**
	 * Method 'findWherePhotoEquals'
	 * 
	 * @param photo
	 */
	public static void findWherePhotoEquals(byte[] photo)
	{
		try {
			ClientDao _dao = getClientDao();
			Client _result[] = _dao.findWherePhotoEquals(photo);
			for (int i=0; i<_result.length; i++ ) {
				display( _result[i] );
			}
		
		}
		catch (Exception _e) {
			_e.printStackTrace();
		}
		
	}

	/**
	 * Method 'getClientDao'
	 * 
	 * @return ClientDao
	 */
	public static ClientDao getClientDao()
	{
		return ClientDaoFactory.create();
	}

	/**
	 * Method 'display'
	 * 
	 * @param dto
	 */
	public static void display(Client dto)
	{
		StringBuffer buf = new StringBuffer();
		buf.append( dto.getDocumentNumber() );
		buf.append( ", " );
		buf.append( dto.getIdDocument() );
		buf.append( ", " );
		buf.append( dto.getFirstName() );
		buf.append( ", " );
		buf.append( dto.getSecondName() );
		buf.append( ", " );
		buf.append( dto.getFirstLastname() );
		buf.append( ", " );
		buf.append( dto.getSecondLastname() );
		buf.append( ", " );
		buf.append( dto.getPhoto() );
		System.out.println( buf.toString() );
	}

}
