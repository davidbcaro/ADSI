/*
 * This source file was generated by FireStorm/DAO.
 * 
 * If you purchase a full license for FireStorm/DAO you can customize this header file.
 * 
 * For more information please visit http://www.codefutures.com/products/firestorm
 */

package co.edu.sena.model.dao.example;

import java.math.*;
import java.util.Date;
import java.util.Collection;
import co.edu.sena.model.dao.dao.NumberGroupDao;
import co.edu.sena.model.dao.dto.NumberGroup;
import co.edu.sena.model.dao.exceptions.NumberGroupDaoException;
import co.edu.sena.model.dao.factory.NumberGroupDaoFactory;

public class NumberGroupDaoSample
{
	/**
	 * Method 'main'
	 * 
	 * @param arg
	 * @throws Exception
	 */
	public static void main(String[] arg) throws Exception
	{
		// Uncomment one of the lines below to test the generated code
		
		 findAll();
		// findByProgram("", "");
		// findByStateNumberGroup("");
		// findWhereNumberGroupEquals("");
		// findWhereStartDateEquals(null);
		// findWhereEndDateEquals(null);
		// findWhereRouteEquals("");
		// findWhereNameStateEquals("");
		// findWhereProgramCodeEquals("");
		// findWhereVersionEquals("");
	}

	/**
	 * Method 'findAll'
	 * 
	 */
	public static void findAll()
	{
		try {
			NumberGroupDao _dao = getNumberGroupDao();
			NumberGroup _result[] = _dao.findAll();
			for (int i=0; i<_result.length; i++ ) {
				display( _result[i] );
			}
		
		}
		catch (Exception _e) {
			_e.printStackTrace();
		}
		
	}

	/**
	 * Method 'findByProgram'
	 * 
	 * @param programCode
	 * @param version
	 */
	public static void findByProgram(String programCode, String version)
	{
		try {
			NumberGroupDao _dao = getNumberGroupDao();
			NumberGroup _result[] = _dao.findByProgram(programCode, version);
			for (int i=0; i<_result.length; i++ ) {
				display( _result[i] );
			}
		
		}
		catch (Exception _e) {
			_e.printStackTrace();
		}
		
	}

	/**
	 * Method 'findByStateNumberGroup'
	 * 
	 * @param nameState
	 */
	public static void findByStateNumberGroup(String nameState)
	{
		try {
			NumberGroupDao _dao = getNumberGroupDao();
			NumberGroup _result[] = _dao.findByStateNumberGroup(nameState);
			for (int i=0; i<_result.length; i++ ) {
				display( _result[i] );
			}
		
		}
		catch (Exception _e) {
			_e.printStackTrace();
		}
		
	}

	/**
	 * Method 'findWhereNumberGroupEquals'
	 * 
	 * @param numberGroup
	 */
	public static void findWhereNumberGroupEquals(String numberGroup)
	{
		try {
			NumberGroupDao _dao = getNumberGroupDao();
			NumberGroup _result[] = _dao.findWhereNumberGroupEquals(numberGroup);
			for (int i=0; i<_result.length; i++ ) {
				display( _result[i] );
			}
		
		}
		catch (Exception _e) {
			_e.printStackTrace();
		}
		
	}

	/**
	 * Method 'findWhereStartDateEquals'
	 * 
	 * @param startDate
	 */
	public static void findWhereStartDateEquals(Date startDate)
	{
		try {
			NumberGroupDao _dao = getNumberGroupDao();
			NumberGroup _result[] = _dao.findWhereStartDateEquals(startDate);
			for (int i=0; i<_result.length; i++ ) {
				display( _result[i] );
			}
		
		}
		catch (Exception _e) {
			_e.printStackTrace();
		}
		
	}

	/**
	 * Method 'findWhereEndDateEquals'
	 * 
	 * @param endDate
	 */
	public static void findWhereEndDateEquals(Date endDate)
	{
		try {
			NumberGroupDao _dao = getNumberGroupDao();
			NumberGroup _result[] = _dao.findWhereEndDateEquals(endDate);
			for (int i=0; i<_result.length; i++ ) {
				display( _result[i] );
			}
		
		}
		catch (Exception _e) {
			_e.printStackTrace();
		}
		
	}

	/**
	 * Method 'findWhereRouteEquals'
	 * 
	 * @param route
	 */
	public static void findWhereRouteEquals(String route)
	{
		try {
			NumberGroupDao _dao = getNumberGroupDao();
			NumberGroup _result[] = _dao.findWhereRouteEquals(route);
			for (int i=0; i<_result.length; i++ ) {
				display( _result[i] );
			}
		
		}
		catch (Exception _e) {
			_e.printStackTrace();
		}
		
	}

	/**
	 * Method 'findWhereNameStateEquals'
	 * 
	 * @param nameState
	 */
	public static void findWhereNameStateEquals(String nameState)
	{
		try {
			NumberGroupDao _dao = getNumberGroupDao();
			NumberGroup _result[] = _dao.findWhereNameStateEquals(nameState);
			for (int i=0; i<_result.length; i++ ) {
				display( _result[i] );
			}
		
		}
		catch (Exception _e) {
			_e.printStackTrace();
		}
		
	}

	/**
	 * Method 'findWhereProgramCodeEquals'
	 * 
	 * @param programCode
	 */
	public static void findWhereProgramCodeEquals(String programCode)
	{
		try {
			NumberGroupDao _dao = getNumberGroupDao();
			NumberGroup _result[] = _dao.findWhereProgramCodeEquals(programCode);
			for (int i=0; i<_result.length; i++ ) {
				display( _result[i] );
			}
		
		}
		catch (Exception _e) {
			_e.printStackTrace();
		}
		
	}

	/**
	 * Method 'findWhereVersionEquals'
	 * 
	 * @param version
	 */
	public static void findWhereVersionEquals(String version)
	{
		try {
			NumberGroupDao _dao = getNumberGroupDao();
			NumberGroup _result[] = _dao.findWhereVersionEquals(version);
			for (int i=0; i<_result.length; i++ ) {
				display( _result[i] );
			}
		
		}
		catch (Exception _e) {
			_e.printStackTrace();
		}
		
	}

	/**
	 * Method 'getNumberGroupDao'
	 * 
	 * @return NumberGroupDao
	 */
	public static NumberGroupDao getNumberGroupDao()
	{
		return NumberGroupDaoFactory.create();
	}

	/**
	 * Method 'display'
	 * 
	 * @param dto
	 */
	public static void display(NumberGroup dto)
	{
		StringBuffer buf = new StringBuffer();
		buf.append( dto.getNumberGroup() );
		buf.append( ", " );
		buf.append( dto.getStartDate() );
		buf.append( ", " );
		buf.append( dto.getEndDate() );
		buf.append( ", " );
		buf.append( dto.getRoute() );
		buf.append( ", " );
		buf.append( dto.getNameState() );
		buf.append( ", " );
		buf.append( dto.getProgramCode() );
		buf.append( ", " );
		buf.append( dto.getVersion() );
		System.out.println( buf.toString() );
	}

}
