/*
 * This source file was generated by FireStorm/DAO.
 * 
 * If you purchase a full license for FireStorm/DAO you can customize this header file.
 * 
 * For more information please visit http://www.codefutures.com/products/firestorm
 */

package co.edu.sena.model.dao.dao;

import co.edu.sena.model.dao.dto.*;
import co.edu.sena.model.dao.exceptions.*;

public interface UserDao
{
	/** 
	 * Inserts a new row in the user table.
	 */
	public UserPk insert(User dto) throws UserDaoException;

	/** 
	 * Updates a single row in the user table.
	 */
	public void update(UserPk pk, User dto) throws UserDaoException;

	/** 
	 * Deletes a single row in the user table.
	 */
	public void delete(UserPk pk) throws UserDaoException;

	/** 
	 * Returns the rows from the user table that matches the specified primary-key value.
	 */
	public User findByPrimaryKey(UserPk pk) throws UserDaoException;

	/** 
	 * Returns all rows from the user table that match the criteria 'id_Document = :idDocument AND document_Number = :documentNumber'.
	 */
	public User findByPrimaryKey(String idDocument, String documentNumber) throws UserDaoException;

	/** 
	 * Returns all rows from the user table that match the criteria ''.
	 */
	public User[] findAll() throws UserDaoException;

	/** 
	 * Returns all rows from the user table that match the criteria 'id_Document = :idDocument AND document_Number = :documentNumber'.
	 */
	public User[] findByClient(String idDocument, String documentNumber) throws UserDaoException;

	/** 
	 * Returns all rows from the user table that match the criteria 'email = :email'.
	 */
	public User[] findWhereEmailEquals(String email) throws UserDaoException;

	/** 
	 * Returns all rows from the user table that match the criteria 'password = :password'.
	 */
	public User[] findWherePasswordEquals(String password) throws UserDaoException;

	/** 
	 * Returns all rows from the user table that match the criteria 'date_Terminate = :dateTerminate'.
	 */
	public User[] findWhereDateTerminateEquals(String dateTerminate) throws UserDaoException;

	/** 
	 * Returns all rows from the user table that match the criteria 'id_Document = :idDocument'.
	 */
	public User[] findWhereIdDocumentEquals(String idDocument) throws UserDaoException;

	/** 
	 * Returns all rows from the user table that match the criteria 'document_Number = :documentNumber'.
	 */
	public User[] findWhereDocumentNumberEquals(String documentNumber) throws UserDaoException;

	/** 
	 * Sets the value of maxRows
	 */
	public void setMaxRows(int maxRows);

	/** 
	 * Gets the value of maxRows
	 */
	public int getMaxRows();

	/** 
	 * Returns all rows from the user table that match the specified arbitrary SQL statement
	 */
	public User[] findByDynamicSelect(String sql, Object[] sqlParams) throws UserDaoException;

	/** 
	 * Returns all rows from the user table that match the specified arbitrary SQL statement
	 */
	public User[] findByDynamicWhere(String sql, Object[] sqlParams) throws UserDaoException;

}
