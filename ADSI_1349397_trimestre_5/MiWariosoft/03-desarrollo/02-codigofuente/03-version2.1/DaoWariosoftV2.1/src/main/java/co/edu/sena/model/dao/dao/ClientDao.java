/*
 * This source file was generated by FireStorm/DAO.
 * 
 * If you purchase a full license for FireStorm/DAO you can customize this header file.
 * 
 * For more information please visit http://www.codefutures.com/products/firestorm
 */

package co.edu.sena.model.dao.dao;

import co.edu.sena.model.dao.dto.*;
import co.edu.sena.model.dao.exceptions.*;

public interface ClientDao
{
	/** 
	 * Inserts a new row in the client table.
	 */
	public ClientPk insert(Client dto) throws ClientDaoException;

	/** 
	 * Updates a single row in the client table.
	 */
	public void update(ClientPk pk, Client dto) throws ClientDaoException;

	/** 
	 * Deletes a single row in the client table.
	 */
	public void delete(ClientPk pk) throws ClientDaoException;

	/** 
	 * Returns the rows from the client table that matches the specified primary-key value.
	 */
	public Client findByPrimaryKey(ClientPk pk) throws ClientDaoException;

	/** 
	 * Returns all rows from the client table that match the criteria 'id_Document = :idDocument AND document_Number = :documentNumber'.
	 */
	public Client findByPrimaryKey(String idDocument, String documentNumber) throws ClientDaoException;

	/** 
	 * Returns all rows from the client table that match the criteria ''.
	 */
	public Client[] findAll() throws ClientDaoException;

	/** 
	 * Returns all rows from the client table that match the criteria 'id_Document = :idDocument'.
	 */
	public Client[] findByDocument(String idDocument) throws ClientDaoException;

	/** 
	 * Returns all rows from the client table that match the criteria 'document_Number = :documentNumber'.
	 */
	public Client[] findWhereDocumentNumberEquals(String documentNumber) throws ClientDaoException;

	/** 
	 * Returns all rows from the client table that match the criteria 'id_Document = :idDocument'.
	 */
	public Client[] findWhereIdDocumentEquals(String idDocument) throws ClientDaoException;

	/** 
	 * Returns all rows from the client table that match the criteria 'first_Name = :firstName'.
	 */
	public Client[] findWhereFirstNameEquals(String firstName) throws ClientDaoException;

	/** 
	 * Returns all rows from the client table that match the criteria 'second_Name = :secondName'.
	 */
	public Client[] findWhereSecondNameEquals(String secondName) throws ClientDaoException;

	/** 
	 * Returns all rows from the client table that match the criteria 'first_Lastname = :firstLastname'.
	 */
	public Client[] findWhereFirstLastnameEquals(String firstLastname) throws ClientDaoException;

	/** 
	 * Returns all rows from the client table that match the criteria 'second_Lastname = :secondLastname'.
	 */
	public Client[] findWhereSecondLastnameEquals(String secondLastname) throws ClientDaoException;

	/** 
	 * Returns all rows from the client table that match the criteria 'photo = :photo'.
	 */
	public Client[] findWherePhotoEquals(byte[] photo) throws ClientDaoException;

	/** 
	 * Sets the value of maxRows
	 */
	public void setMaxRows(int maxRows);

	/** 
	 * Gets the value of maxRows
	 */
	public int getMaxRows();

	/** 
	 * Returns all rows from the client table that match the specified arbitrary SQL statement
	 */
	public Client[] findByDynamicSelect(String sql, Object[] sqlParams) throws ClientDaoException;

	/** 
	 * Returns all rows from the client table that match the specified arbitrary SQL statement
	 */
	public Client[] findByDynamicWhere(String sql, Object[] sqlParams) throws ClientDaoException;

}
