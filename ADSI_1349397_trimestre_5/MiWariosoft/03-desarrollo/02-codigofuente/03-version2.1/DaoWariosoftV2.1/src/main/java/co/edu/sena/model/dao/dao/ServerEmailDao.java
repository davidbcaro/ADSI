/*
 * This source file was generated by FireStorm/DAO.
 * 
 * If you purchase a full license for FireStorm/DAO you can customize this header file.
 * 
 * For more information please visit http://www.codefutures.com/products/firestorm
 */

package co.edu.sena.model.dao.dao;

import co.edu.sena.model.dao.dto.*;
import co.edu.sena.model.dao.exceptions.*;

public interface ServerEmailDao
{
	/** 
	 * Inserts a new row in the server_email table.
	 */
	public ServerEmailPk insert(ServerEmail dto) throws ServerEmailDaoException;

	/** 
	 * Updates a single row in the server_email table.
	 */
	public void update(ServerEmailPk pk, ServerEmail dto) throws ServerEmailDaoException;

	/** 
	 * Deletes a single row in the server_email table.
	 */
	public void delete(ServerEmailPk pk) throws ServerEmailDaoException;

	/** 
	 * Returns the rows from the server_email table that matches the specified primary-key value.
	 */
	public ServerEmail findByPrimaryKey(ServerEmailPk pk) throws ServerEmailDaoException;

	/** 
	 * Returns all rows from the server_email table that match the criteria 'email = :email'.
	 */
	public ServerEmail findByPrimaryKey(String email) throws ServerEmailDaoException;

	/** 
	 * Returns all rows from the server_email table that match the criteria ''.
	 */
	public ServerEmail[] findAll() throws ServerEmailDaoException;

	/** 
	 * Returns all rows from the server_email table that match the criteria 'email = :email'.
	 */
	public ServerEmail[] findWhereEmailEquals(String email) throws ServerEmailDaoException;

	/** 
	 * Returns all rows from the server_email table that match the criteria 'password = :password'.
	 */
	public ServerEmail[] findWherePasswordEquals(String password) throws ServerEmailDaoException;

	/** 
	 * Returns all rows from the server_email table that match the criteria 'smtp_host = :smtpHost'.
	 */
	public ServerEmail[] findWhereSmtpHostEquals(String smtpHost) throws ServerEmailDaoException;

	/** 
	 * Returns all rows from the server_email table that match the criteria 'smtp_Port = :smtpPort'.
	 */
	public ServerEmail[] findWhereSmtpPortEquals(int smtpPort) throws ServerEmailDaoException;

	/** 
	 * Returns all rows from the server_email table that match the criteria 'smtp_Start_Tls_Enable = :smtpStartTlsEnable'.
	 */
	public ServerEmail[] findWhereSmtpStartTlsEnableEquals(short smtpStartTlsEnable) throws ServerEmailDaoException;

	/** 
	 * Returns all rows from the server_email table that match the criteria 'smtp_Auth = :smtpAuth'.
	 */
	public ServerEmail[] findWhereSmtpAuthEquals(short smtpAuth) throws ServerEmailDaoException;

	/** 
	 * Returns all rows from the server_email table that match the criteria 'affair_Recovery = :affairRecovery'.
	 */
	public ServerEmail[] findWhereAffairRecoveryEquals(String affairRecovery) throws ServerEmailDaoException;

	/** 
	 * Returns all rows from the server_email table that match the criteria 'recovery_Case = :recoveryCase'.
	 */
	public ServerEmail[] findWhereRecoveryCaseEquals(String recoveryCase) throws ServerEmailDaoException;

	/** 
	 * Sets the value of maxRows
	 */
	public void setMaxRows(int maxRows);

	/** 
	 * Gets the value of maxRows
	 */
	public int getMaxRows();

	/** 
	 * Returns all rows from the server_email table that match the specified arbitrary SQL statement
	 */
	public ServerEmail[] findByDynamicSelect(String sql, Object[] sqlParams) throws ServerEmailDaoException;

	/** 
	 * Returns all rows from the server_email table that match the specified arbitrary SQL statement
	 */
	public ServerEmail[] findByDynamicWhere(String sql, Object[] sqlParams) throws ServerEmailDaoException;

}
