/*
 * This source file was generated by FireStorm/DAO.
 * 
 * If you purchase a full license for FireStorm/DAO you can customize this header file.
 * 
 * For more information please visit http://www.codefutures.com/products/firestorm
 */

package co.edu.sena.tidsplan.example;

import java.math.*;
import java.util.Date;
import java.util.Collection;
import co.edu.sena.tidsplan.dao.DisponibilityDao;
import co.edu.sena.tidsplan.dto.Disponibility;
import co.edu.sena.tidsplan.exceptions.DisponibilityDaoException;
import co.edu.sena.tidsplan.factory.DisponibilityDaoFactory;

public class DisponibilityDaoSample
{
	/**
	 * Method 'main'
	 * 
	 * @param arg
	 * @throws Exception
	 */
	public static void main(String[] arg) throws Exception
	{
		// Uncomment one of the lines below to test the generated code
		
		 findAll();
		// findByDay("");
		// findByInstructor("", "");
		// findByWorkingDay("");
		// findWhereDocumentEquals("");
		// findWhereDocumentNumberEquals("");
		// findWhereStartHourEquals(null);
		// findWhereEndHourEquals(null);
		// findWhereNameDayEquals("");
		// findWhereWorkingDayInitialsEquals("");
	}

	/**
	 * Method 'findAll'
	 * 
	 */
	public static void findAll()
	{
		try {
			DisponibilityDao _dao = getDisponibilityDao();
			Disponibility _result[] = _dao.findAll();
			for (int i=0; i<_result.length; i++ ) {
				display( _result[i] );
			}
		
		}
		catch (Exception _e) {
			_e.printStackTrace();
		}
		
	}

	/**
	 * Method 'findByDay'
	 * 
	 * @param nameDay
	 */
	public static void findByDay(String nameDay)
	{
		try {
			DisponibilityDao _dao = getDisponibilityDao();
			Disponibility _result[] = _dao.findByDay(nameDay);
			for (int i=0; i<_result.length; i++ ) {
				display( _result[i] );
			}
		
		}
		catch (Exception _e) {
			_e.printStackTrace();
		}
		
	}

	/**
	 * Method 'findByInstructor'
	 * 
	 * @param documentNumber
	 * @param document
	 */
	public static void findByInstructor(String documentNumber, String document)
	{
		try {
			DisponibilityDao _dao = getDisponibilityDao();
			Disponibility _result[] = _dao.findByInstructor(documentNumber, document);
			for (int i=0; i<_result.length; i++ ) {
				display( _result[i] );
			}
		
		}
		catch (Exception _e) {
			_e.printStackTrace();
		}
		
	}

	/**
	 * Method 'findByWorkingDay'
	 * 
	 * @param workingDayInitials
	 */
	public static void findByWorkingDay(String workingDayInitials)
	{
		try {
			DisponibilityDao _dao = getDisponibilityDao();
			Disponibility _result[] = _dao.findByWorkingDay(workingDayInitials);
			for (int i=0; i<_result.length; i++ ) {
				display( _result[i] );
			}
		
		}
		catch (Exception _e) {
			_e.printStackTrace();
		}
		
	}

	/**
	 * Method 'findWhereDocumentEquals'
	 * 
	 * @param document
	 */
	public static void findWhereDocumentEquals(String document)
	{
		try {
			DisponibilityDao _dao = getDisponibilityDao();
			Disponibility _result[] = _dao.findWhereDocumentEquals(document);
			for (int i=0; i<_result.length; i++ ) {
				display( _result[i] );
			}
		
		}
		catch (Exception _e) {
			_e.printStackTrace();
		}
		
	}

	/**
	 * Method 'findWhereDocumentNumberEquals'
	 * 
	 * @param documentNumber
	 */
	public static void findWhereDocumentNumberEquals(String documentNumber)
	{
		try {
			DisponibilityDao _dao = getDisponibilityDao();
			Disponibility _result[] = _dao.findWhereDocumentNumberEquals(documentNumber);
			for (int i=0; i<_result.length; i++ ) {
				display( _result[i] );
			}
		
		}
		catch (Exception _e) {
			_e.printStackTrace();
		}
		
	}

	/**
	 * Method 'findWhereStartHourEquals'
	 * 
	 * @param startHour
	 */
	public static void findWhereStartHourEquals(Date startHour)
	{
		try {
			DisponibilityDao _dao = getDisponibilityDao();
			Disponibility _result[] = _dao.findWhereStartHourEquals(startHour);
			for (int i=0; i<_result.length; i++ ) {
				display( _result[i] );
			}
		
		}
		catch (Exception _e) {
			_e.printStackTrace();
		}
		
	}

	/**
	 * Method 'findWhereEndHourEquals'
	 * 
	 * @param endHour
	 */
	public static void findWhereEndHourEquals(Date endHour)
	{
		try {
			DisponibilityDao _dao = getDisponibilityDao();
			Disponibility _result[] = _dao.findWhereEndHourEquals(endHour);
			for (int i=0; i<_result.length; i++ ) {
				display( _result[i] );
			}
		
		}
		catch (Exception _e) {
			_e.printStackTrace();
		}
		
	}

	/**
	 * Method 'findWhereNameDayEquals'
	 * 
	 * @param nameDay
	 */
	public static void findWhereNameDayEquals(String nameDay)
	{
		try {
			DisponibilityDao _dao = getDisponibilityDao();
			Disponibility _result[] = _dao.findWhereNameDayEquals(nameDay);
			for (int i=0; i<_result.length; i++ ) {
				display( _result[i] );
			}
		
		}
		catch (Exception _e) {
			_e.printStackTrace();
		}
		
	}

	/**
	 * Method 'findWhereWorkingDayInitialsEquals'
	 * 
	 * @param workingDayInitials
	 */
	public static void findWhereWorkingDayInitialsEquals(String workingDayInitials)
	{
		try {
			DisponibilityDao _dao = getDisponibilityDao();
			Disponibility _result[] = _dao.findWhereWorkingDayInitialsEquals(workingDayInitials);
			for (int i=0; i<_result.length; i++ ) {
				display( _result[i] );
			}
		
		}
		catch (Exception _e) {
			_e.printStackTrace();
		}
		
	}

	/**
	 * Method 'getDisponibilityDao'
	 * 
	 * @return DisponibilityDao
	 */
	public static DisponibilityDao getDisponibilityDao()
	{
		return DisponibilityDaoFactory.create();
	}

	/**
	 * Method 'display'
	 * 
	 * @param dto
	 */
	public static void display(Disponibility dto)
	{
		StringBuffer buf = new StringBuffer();
		buf.append( dto.getDocument() );
		buf.append( ", " );
		buf.append( dto.getDocumentNumber() );
		buf.append( ", " );
		buf.append( dto.getStartHour() );
		buf.append( ", " );
		buf.append( dto.getEndHour() );
		buf.append( ", " );
		buf.append( dto.getNameDay() );
		buf.append( ", " );
		buf.append( dto.getWorkingDayInitials() );
		System.out.println( buf.toString() );
	}

}
