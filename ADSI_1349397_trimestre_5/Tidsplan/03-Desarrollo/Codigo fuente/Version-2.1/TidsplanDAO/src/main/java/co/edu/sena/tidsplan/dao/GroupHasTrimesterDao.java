/*
 * This source file was generated by FireStorm/DAO.
 * 
 * If you purchase a full license for FireStorm/DAO you can customize this header file.
 * 
 * For more information please visit http://www.codefutures.com/products/firestorm
 */

package co.edu.sena.tidsplan.dao;

import co.edu.sena.tidsplan.dto.*;
import co.edu.sena.tidsplan.exceptions.*;

public interface GroupHasTrimesterDao
{
	/** 
	 * Inserts a new row in the group_has_trimester table.
	 */
	public GroupHasTrimesterPk insert(GroupHasTrimester dto) throws GroupHasTrimesterDaoException;

	/** 
	 * Updates a single row in the group_has_trimester table.
	 */
	public void update(GroupHasTrimesterPk pk, GroupHasTrimester dto) throws GroupHasTrimesterDaoException;

	/** 
	 * Deletes a single row in the group_has_trimester table.
	 */
	public void delete(GroupHasTrimesterPk pk) throws GroupHasTrimesterDaoException;

	/** 
	 * Returns the rows from the group_has_trimester table that matches the specified primary-key value.
	 */
	public GroupHasTrimester findByPrimaryKey(GroupHasTrimesterPk pk) throws GroupHasTrimesterDaoException;

	/** 
	 * Returns all rows from the group_has_trimester table that match the criteria 'number_group = :numberGroup AND name_trimester = :nameTrimester AND workingday_initials = :workingdayInitials AND level_formation = :levelFormation'.
	 */
	public GroupHasTrimester findByPrimaryKey(String numberGroup, String nameTrimester, String workingdayInitials, String levelFormation) throws GroupHasTrimesterDaoException;

	/** 
	 * Returns all rows from the group_has_trimester table that match the criteria ''.
	 */
	public GroupHasTrimester[] findAll() throws GroupHasTrimesterDaoException;

	/** 
	 * Returns all rows from the group_has_trimester table that match the criteria 'number_group = :numberGroup'.
	 */
	public GroupHasTrimester[] findByGroup(String numberGroup) throws GroupHasTrimesterDaoException;

	/** 
	 * Returns all rows from the group_has_trimester table that match the criteria 'name_trimester = :nameTrimester AND workingday_initials = :workingdayInitials AND level_formation = :levelFormation'.
	 */
	public GroupHasTrimester[] findByTrimester(String nameTrimester, String workingdayInitials, String levelFormation) throws GroupHasTrimesterDaoException;

	/** 
	 * Returns all rows from the group_has_trimester table that match the criteria 'number_group = :numberGroup'.
	 */
	public GroupHasTrimester[] findWhereNumberGroupEquals(String numberGroup) throws GroupHasTrimesterDaoException;

	/** 
	 * Returns all rows from the group_has_trimester table that match the criteria 'name_trimester = :nameTrimester'.
	 */
	public GroupHasTrimester[] findWhereNameTrimesterEquals(String nameTrimester) throws GroupHasTrimesterDaoException;

	/** 
	 * Returns all rows from the group_has_trimester table that match the criteria 'workingday_initials = :workingdayInitials'.
	 */
	public GroupHasTrimester[] findWhereWorkingdayInitialsEquals(String workingdayInitials) throws GroupHasTrimesterDaoException;

	/** 
	 * Returns all rows from the group_has_trimester table that match the criteria 'level_formation = :levelFormation'.
	 */
	public GroupHasTrimester[] findWhereLevelFormationEquals(String levelFormation) throws GroupHasTrimesterDaoException;

	/** 
	 * Sets the value of maxRows
	 */
	public void setMaxRows(int maxRows);

	/** 
	 * Gets the value of maxRows
	 */
	public int getMaxRows();

	/** 
	 * Returns all rows from the group_has_trimester table that match the specified arbitrary SQL statement
	 */
	public GroupHasTrimester[] findByDynamicSelect(String sql, Object[] sqlParams) throws GroupHasTrimesterDaoException;

	/** 
	 * Returns all rows from the group_has_trimester table that match the specified arbitrary SQL statement
	 */
	public GroupHasTrimester[] findByDynamicWhere(String sql, Object[] sqlParams) throws GroupHasTrimesterDaoException;

}
