/*
 * This source file was generated by FireStorm/DAO.
 * 
 * If you purchase a full license for FireStorm/DAO you can customize this header file.
 * 
 * For more information please visit http://www.codefutures.com/products/firestorm
 */

package co.edu.sena.tidsplan.dao;

import java.util.Date;
import co.edu.sena.tidsplan.dto.*;
import co.edu.sena.tidsplan.exceptions.*;

public interface TrimesterCurrentDao
{
	/** 
	 * Inserts a new row in the trimester_current table.
	 */
	public TrimesterCurrentPk insert(TrimesterCurrent dto) throws TrimesterCurrentDaoException;

	/** 
	 * Updates a single row in the trimester_current table.
	 */
	public void update(TrimesterCurrentPk pk, TrimesterCurrent dto) throws TrimesterCurrentDaoException;

	/** 
	 * Deletes a single row in the trimester_current table.
	 */
	public void delete(TrimesterCurrentPk pk) throws TrimesterCurrentDaoException;

	/** 
	 * Returns the rows from the trimester_current table that matches the specified primary-key value.
	 */
	public TrimesterCurrent findByPrimaryKey(TrimesterCurrentPk pk) throws TrimesterCurrentDaoException;

	/** 
	 * Returns all rows from the trimester_current table that match the criteria 'id_trimester = :idTrimester'.
	 */
	public TrimesterCurrent findByPrimaryKey(String idTrimester) throws TrimesterCurrentDaoException;

	/** 
	 * Returns all rows from the trimester_current table that match the criteria ''.
	 */
	public TrimesterCurrent[] findAll() throws TrimesterCurrentDaoException;

	/** 
	 * Returns all rows from the trimester_current table that match the criteria 'id_trimester = :idTrimester'.
	 */
	public TrimesterCurrent[] findWhereIdTrimesterEquals(String idTrimester) throws TrimesterCurrentDaoException;

	/** 
	 * Returns all rows from the trimester_current table that match the criteria 'start_date = :startDate'.
	 */
	public TrimesterCurrent[] findWhereStartDateEquals(Date startDate) throws TrimesterCurrentDaoException;

	/** 
	 * Returns all rows from the trimester_current table that match the criteria 'end_date = :endDate'.
	 */
	public TrimesterCurrent[] findWhereEndDateEquals(Date endDate) throws TrimesterCurrentDaoException;

	/** 
	 * Sets the value of maxRows
	 */
	public void setMaxRows(int maxRows);

	/** 
	 * Gets the value of maxRows
	 */
	public int getMaxRows();

	/** 
	 * Returns all rows from the trimester_current table that match the specified arbitrary SQL statement
	 */
	public TrimesterCurrent[] findByDynamicSelect(String sql, Object[] sqlParams) throws TrimesterCurrentDaoException;

	/** 
	 * Returns all rows from the trimester_current table that match the specified arbitrary SQL statement
	 */
	public TrimesterCurrent[] findByDynamicWhere(String sql, Object[] sqlParams) throws TrimesterCurrentDaoException;

}
