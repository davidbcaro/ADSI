/*
 * This source file was generated by FireStorm/DAO.
 * 
 * If you purchase a full license for FireStorm/DAO you can customize this header file.
 * 
 * For more information please visit http://www.codefutures.com/products/firestorm
 */

package co.edu.sena.tidsplan.example;

import java.math.*;
import java.util.Date;
import java.util.Collection;
import co.edu.sena.tidsplan.dao.CustomerHasRoleDao;
import co.edu.sena.tidsplan.dto.CustomerHasRole;
import co.edu.sena.tidsplan.exceptions.CustomerHasRoleDaoException;
import co.edu.sena.tidsplan.factory.CustomerHasRoleDaoFactory;

public class CustomerHasRoleDaoSample
{
	/**
	 * Method 'main'
	 * 
	 * @param arg
	 * @throws Exception
	 */
	public static void main(String[] arg) throws Exception
	{
		// Uncomment one of the lines below to test the generated code
		
		findAll();
		// findByCustomer("", "");
		// findByRole("");
		// findWhereDocumentEquals("");
		// findWhereDocumentNumberEquals("");
		// findWhereIdrolEquals("");
		// findWhereStatusEquals(0);
	}

	/**
	 * Method 'findAll'
	 * 
	 */
	public static void findAll()
	{
		try {
			CustomerHasRoleDao _dao = getCustomerHasRoleDao();
			CustomerHasRole _result[] = _dao.findAll();
			for (int i=0; i<_result.length; i++ ) {
				display( _result[i] );
			}
		
		}
		catch (Exception _e) {
			_e.printStackTrace();
		}
		
	}

	/**
	 * Method 'findByCustomer'
	 * 
	 * @param document
	 * @param documentNumber
	 */
	public static void findByCustomer(String document, String documentNumber)
	{
		try {
			CustomerHasRoleDao _dao = getCustomerHasRoleDao();
			CustomerHasRole _result[] = _dao.findByCustomer(document, documentNumber);
			for (int i=0; i<_result.length; i++ ) {
				display( _result[i] );
			}
		
		}
		catch (Exception _e) {
			_e.printStackTrace();
		}
		
	}

	/**
	 * Method 'findByRole'
	 * 
	 * @param idrol
	 */
	public static void findByRole(String idrol)
	{
		try {
			CustomerHasRoleDao _dao = getCustomerHasRoleDao();
			CustomerHasRole _result[] = _dao.findByRole(idrol);
			for (int i=0; i<_result.length; i++ ) {
				display( _result[i] );
			}
		
		}
		catch (Exception _e) {
			_e.printStackTrace();
		}
		
	}

	/**
	 * Method 'findWhereDocumentEquals'
	 * 
	 * @param document
	 */
	public static void findWhereDocumentEquals(String document)
	{
		try {
			CustomerHasRoleDao _dao = getCustomerHasRoleDao();
			CustomerHasRole _result[] = _dao.findWhereDocumentEquals(document);
			for (int i=0; i<_result.length; i++ ) {
				display( _result[i] );
			}
		
		}
		catch (Exception _e) {
			_e.printStackTrace();
		}
		
	}

	/**
	 * Method 'findWhereDocumentNumberEquals'
	 * 
	 * @param documentNumber
	 */
	public static void findWhereDocumentNumberEquals(String documentNumber)
	{
		try {
			CustomerHasRoleDao _dao = getCustomerHasRoleDao();
			CustomerHasRole _result[] = _dao.findWhereDocumentNumberEquals(documentNumber);
			for (int i=0; i<_result.length; i++ ) {
				display( _result[i] );
			}
		
		}
		catch (Exception _e) {
			_e.printStackTrace();
		}
		
	}

	/**
	 * Method 'findWhereIdrolEquals'
	 * 
	 * @param idrol
	 */
	public static void findWhereIdrolEquals(String idrol)
	{
		try {
			CustomerHasRoleDao _dao = getCustomerHasRoleDao();
			CustomerHasRole _result[] = _dao.findWhereIdrolEquals(idrol);
			for (int i=0; i<_result.length; i++ ) {
				display( _result[i] );
			}
		
		}
		catch (Exception _e) {
			_e.printStackTrace();
		}
		
	}

	/**
	 * Method 'findWhereStatusEquals'
	 * 
	 * @param status
	 */
	public static void findWhereStatusEquals(short status)
	{
		try {
			CustomerHasRoleDao _dao = getCustomerHasRoleDao();
			CustomerHasRole _result[] = _dao.findWhereStatusEquals(status);
			for (int i=0; i<_result.length; i++ ) {
				display( _result[i] );
			}
		
		}
		catch (Exception _e) {
			_e.printStackTrace();
		}
		
	}

	/**
	 * Method 'getCustomerHasRoleDao'
	 * 
	 * @return CustomerHasRoleDao
	 */
	public static CustomerHasRoleDao getCustomerHasRoleDao()
	{
		return CustomerHasRoleDaoFactory.create();
	}

	/**
	 * Method 'display'
	 * 
	 * @param dto
	 */
	public static void display(CustomerHasRole dto)
	{
		StringBuffer buf = new StringBuffer();
		buf.append( dto.getDocument() );
		buf.append( ", " );
		buf.append( dto.getDocumentNumber() );
		buf.append( ", " );
		buf.append( dto.getIdrol() );
		buf.append( ", " );
		buf.append( dto.getStatus() );
		System.out.println( buf.toString() );
	}

}
