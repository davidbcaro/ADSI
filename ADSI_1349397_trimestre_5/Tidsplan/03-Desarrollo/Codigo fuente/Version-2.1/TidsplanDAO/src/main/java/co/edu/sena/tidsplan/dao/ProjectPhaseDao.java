/*
 * This source file was generated by FireStorm/DAO.
 * 
 * If you purchase a full license for FireStorm/DAO you can customize this header file.
 * 
 * For more information please visit http://www.codefutures.com/products/firestorm
 */

package co.edu.sena.tidsplan.dao;

import co.edu.sena.tidsplan.dto.*;
import co.edu.sena.tidsplan.exceptions.*;

public interface ProjectPhaseDao
{
	/** 
	 * Inserts a new row in the project_phase table.
	 */
	public ProjectPhasePk insert(ProjectPhase dto) throws ProjectPhaseDaoException;

	/** 
	 * Updates a single row in the project_phase table.
	 */
	public void update(ProjectPhasePk pk, ProjectPhase dto) throws ProjectPhaseDaoException;

	/** 
	 * Deletes a single row in the project_phase table.
	 */
	public void delete(ProjectPhasePk pk) throws ProjectPhaseDaoException;

	/** 
	 * Returns the rows from the project_phase table that matches the specified primary-key value.
	 */
	public ProjectPhase findByPrimaryKey(ProjectPhasePk pk) throws ProjectPhaseDaoException;

	/** 
	 * Returns all rows from the project_phase table that match the criteria 'name_phase = :namePhase AND project_code = :projectCode'.
	 */
	public ProjectPhase findByPrimaryKey(String namePhase, String projectCode) throws ProjectPhaseDaoException;

	/** 
	 * Returns all rows from the project_phase table that match the criteria ''.
	 */
	public ProjectPhase[] findAll() throws ProjectPhaseDaoException;

	/** 
	 * Returns all rows from the project_phase table that match the criteria 'project_code = :projectCode'.
	 */
	public ProjectPhase[] findByProject(String projectCode) throws ProjectPhaseDaoException;

	/** 
	 * Returns all rows from the project_phase table that match the criteria 'name_phase = :namePhase'.
	 */
	public ProjectPhase[] findWhereNamePhaseEquals(String namePhase) throws ProjectPhaseDaoException;

	/** 
	 * Returns all rows from the project_phase table that match the criteria 'status = :status'.
	 */
	public ProjectPhase[] findWhereStatusEquals(short status) throws ProjectPhaseDaoException;

	/** 
	 * Returns all rows from the project_phase table that match the criteria 'project_code = :projectCode'.
	 */
	public ProjectPhase[] findWhereProjectCodeEquals(String projectCode) throws ProjectPhaseDaoException;

	/** 
	 * Sets the value of maxRows
	 */
	public void setMaxRows(int maxRows);

	/** 
	 * Gets the value of maxRows
	 */
	public int getMaxRows();

	/** 
	 * Returns all rows from the project_phase table that match the specified arbitrary SQL statement
	 */
	public ProjectPhase[] findByDynamicSelect(String sql, Object[] sqlParams) throws ProjectPhaseDaoException;

	/** 
	 * Returns all rows from the project_phase table that match the specified arbitrary SQL statement
	 */
	public ProjectPhase[] findByDynamicWhere(String sql, Object[] sqlParams) throws ProjectPhaseDaoException;

}
