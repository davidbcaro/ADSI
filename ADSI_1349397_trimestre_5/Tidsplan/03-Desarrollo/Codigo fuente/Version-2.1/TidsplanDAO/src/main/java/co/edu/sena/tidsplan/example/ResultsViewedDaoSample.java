/*
 * This source file was generated by FireStorm/DAO.
 * 
 * If you purchase a full license for FireStorm/DAO you can customize this header file.
 * 
 * For more information please visit http://www.codefutures.com/products/firestorm
 */

package co.edu.sena.tidsplan.example;

import java.math.*;
import java.util.Date;
import java.util.Collection;
import co.edu.sena.tidsplan.dao.ResultsViewedDao;
import co.edu.sena.tidsplan.dto.ResultsViewed;
import co.edu.sena.tidsplan.exceptions.ResultsViewedDaoException;
import co.edu.sena.tidsplan.factory.ResultsViewedDaoFactory;

public class ResultsViewedDaoSample
{
	/**
	 * Method 'main'
	 * 
	 * @param arg
	 * @throws Exception
	 */
	public static void main(String[] arg) throws Exception
	{
		// Uncomment one of the lines below to test the generated code
		
		 findAll();
		// findByGroupHasTrimester("", "", "", "");
		// findByLearningResult("", "", "", "");
		// findWhereNameTrimesterEquals("");
		// findWhereWorkingdayInitialsEquals("");
		// findWhereLrCodeEquals("");
		// findWhereProgramCodeEquals("");
		// findWhereCompetitionCodeEquals("");
		// findWhereLevelFormationEquals("");
		// findWhereProgramVersionEquals("");
		// findWhereNumberGroupEquals("");
	}

	/**
	 * Method 'findAll'
	 * 
	 */
	public static void findAll()
	{
		try {
			ResultsViewedDao _dao = getResultsViewedDao();
			ResultsViewed _result[] = _dao.findAll();
			for (int i=0; i<_result.length; i++ ) {
				display( _result[i] );
			}
		
		}
		catch (Exception _e) {
			_e.printStackTrace();
		}
		
	}

	/**
	 * Method 'findByGroupHasTrimester'
	 * 
	 * @param numberGroup
	 * @param nameTrimester
	 * @param workingdayInitials
	 * @param levelFormation
	 */
	public static void findByGroupHasTrimester(String numberGroup, String nameTrimester, String workingdayInitials, String levelFormation)
	{
		try {
			ResultsViewedDao _dao = getResultsViewedDao();
			ResultsViewed _result[] = _dao.findByGroupHasTrimester(numberGroup, nameTrimester, workingdayInitials, levelFormation);
			for (int i=0; i<_result.length; i++ ) {
				display( _result[i] );
			}
		
		}
		catch (Exception _e) {
			_e.printStackTrace();
		}
		
	}

	/**
	 * Method 'findByLearningResult'
	 * 
	 * @param lrCode
	 * @param programCode
	 * @param competitionCode
	 * @param programVersion
	 */
	public static void findByLearningResult(String lrCode, String programCode, String competitionCode, String programVersion)
	{
		try {
			ResultsViewedDao _dao = getResultsViewedDao();
			ResultsViewed _result[] = _dao.findByLearningResult(lrCode, programCode, competitionCode, programVersion);
			for (int i=0; i<_result.length; i++ ) {
				display( _result[i] );
			}
		
		}
		catch (Exception _e) {
			_e.printStackTrace();
		}
		
	}

	/**
	 * Method 'findWhereNameTrimesterEquals'
	 * 
	 * @param nameTrimester
	 */
	public static void findWhereNameTrimesterEquals(String nameTrimester)
	{
		try {
			ResultsViewedDao _dao = getResultsViewedDao();
			ResultsViewed _result[] = _dao.findWhereNameTrimesterEquals(nameTrimester);
			for (int i=0; i<_result.length; i++ ) {
				display( _result[i] );
			}
		
		}
		catch (Exception _e) {
			_e.printStackTrace();
		}
		
	}

	/**
	 * Method 'findWhereWorkingdayInitialsEquals'
	 * 
	 * @param workingdayInitials
	 */
	public static void findWhereWorkingdayInitialsEquals(String workingdayInitials)
	{
		try {
			ResultsViewedDao _dao = getResultsViewedDao();
			ResultsViewed _result[] = _dao.findWhereWorkingdayInitialsEquals(workingdayInitials);
			for (int i=0; i<_result.length; i++ ) {
				display( _result[i] );
			}
		
		}
		catch (Exception _e) {
			_e.printStackTrace();
		}
		
	}

	/**
	 * Method 'findWhereLrCodeEquals'
	 * 
	 * @param lrCode
	 */
	public static void findWhereLrCodeEquals(String lrCode)
	{
		try {
			ResultsViewedDao _dao = getResultsViewedDao();
			ResultsViewed _result[] = _dao.findWhereLrCodeEquals(lrCode);
			for (int i=0; i<_result.length; i++ ) {
				display( _result[i] );
			}
		
		}
		catch (Exception _e) {
			_e.printStackTrace();
		}
		
	}

	/**
	 * Method 'findWhereProgramCodeEquals'
	 * 
	 * @param programCode
	 */
	public static void findWhereProgramCodeEquals(String programCode)
	{
		try {
			ResultsViewedDao _dao = getResultsViewedDao();
			ResultsViewed _result[] = _dao.findWhereProgramCodeEquals(programCode);
			for (int i=0; i<_result.length; i++ ) {
				display( _result[i] );
			}
		
		}
		catch (Exception _e) {
			_e.printStackTrace();
		}
		
	}

	/**
	 * Method 'findWhereCompetitionCodeEquals'
	 * 
	 * @param competitionCode
	 */
	public static void findWhereCompetitionCodeEquals(String competitionCode)
	{
		try {
			ResultsViewedDao _dao = getResultsViewedDao();
			ResultsViewed _result[] = _dao.findWhereCompetitionCodeEquals(competitionCode);
			for (int i=0; i<_result.length; i++ ) {
				display( _result[i] );
			}
		
		}
		catch (Exception _e) {
			_e.printStackTrace();
		}
		
	}

	/**
	 * Method 'findWhereLevelFormationEquals'
	 * 
	 * @param levelFormation
	 */
	public static void findWhereLevelFormationEquals(String levelFormation)
	{
		try {
			ResultsViewedDao _dao = getResultsViewedDao();
			ResultsViewed _result[] = _dao.findWhereLevelFormationEquals(levelFormation);
			for (int i=0; i<_result.length; i++ ) {
				display( _result[i] );
			}
		
		}
		catch (Exception _e) {
			_e.printStackTrace();
		}
		
	}

	/**
	 * Method 'findWhereProgramVersionEquals'
	 * 
	 * @param programVersion
	 */
	public static void findWhereProgramVersionEquals(String programVersion)
	{
		try {
			ResultsViewedDao _dao = getResultsViewedDao();
			ResultsViewed _result[] = _dao.findWhereProgramVersionEquals(programVersion);
			for (int i=0; i<_result.length; i++ ) {
				display( _result[i] );
			}
		
		}
		catch (Exception _e) {
			_e.printStackTrace();
		}
		
	}

	/**
	 * Method 'findWhereNumberGroupEquals'
	 * 
	 * @param numberGroup
	 */
	public static void findWhereNumberGroupEquals(String numberGroup)
	{
		try {
			ResultsViewedDao _dao = getResultsViewedDao();
			ResultsViewed _result[] = _dao.findWhereNumberGroupEquals(numberGroup);
			for (int i=0; i<_result.length; i++ ) {
				display( _result[i] );
			}
		
		}
		catch (Exception _e) {
			_e.printStackTrace();
		}
		
	}

	/**
	 * Method 'getResultsViewedDao'
	 * 
	 * @return ResultsViewedDao
	 */
	public static ResultsViewedDao getResultsViewedDao()
	{
		return ResultsViewedDaoFactory.create();
	}

	/**
	 * Method 'display'
	 * 
	 * @param dto
	 */
	public static void display(ResultsViewed dto)
	{
		StringBuffer buf = new StringBuffer();
		buf.append( dto.getNameTrimester() );
		buf.append( ", " );
		buf.append( dto.getWorkingdayInitials() );
		buf.append( ", " );
		buf.append( dto.getLrCode() );
		buf.append( ", " );
		buf.append( dto.getProgramCode() );
		buf.append( ", " );
		buf.append( dto.getCompetitionCode() );
		buf.append( ", " );
		buf.append( dto.getLevelFormation() );
		buf.append( ", " );
		buf.append( dto.getProgramVersion() );
		buf.append( ", " );
		buf.append( dto.getNumberGroup() );
		System.out.println( buf.toString() );
	}

}
