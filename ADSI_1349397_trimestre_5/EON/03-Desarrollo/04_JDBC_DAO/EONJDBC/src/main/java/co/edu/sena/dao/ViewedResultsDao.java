/*
 * This source file was generated by FireStorm/DAO.
 * 
 * If you purchase a full license for FireStorm/DAO you can customize this header file.
 * 
 * For more information please visit http://www.codefutures.com/products/firestorm
 */

package co.edu.sena.dao;

import co.edu.sena.dto.*;
import co.edu.sena.exceptions.*;

public interface ViewedResultsDao
{
	/** 
	 * Inserts a new row in the viewed_results table.
	 */
	public ViewedResultsPk insert(ViewedResults dto) throws ViewedResultsDaoException;

	/** 
	 * Updates a single row in the viewed_results table.
	 */
	public void update(ViewedResultsPk pk, ViewedResults dto) throws ViewedResultsDaoException;

	/** 
	 * Deletes a single row in the viewed_results table.
	 */
	public void delete(ViewedResultsPk pk) throws ViewedResultsDaoException;

	/** 
	 * Returns the rows from the viewed_results table that matches the specified primary-key value.
	 */
	public ViewedResults findByPrimaryKey(ViewedResultsPk pk) throws ViewedResultsDaoException;

	/** 
	 * Returns all rows from the viewed_results table that match the criteria 'number_Ficha = :numberFicha AND quarter_Name = :quarterName AND acronyms_Working_Day = :acronymsWorkingDay AND speciality_Name = :specialityName AND Learning_Result_Code = :learningResultCode AND Program_Code = :programCode AND Version = :version AND Competition_Code = :competitionCode'.
	 */
	public ViewedResults findByPrimaryKey(String numberFicha, String quarterName, String acronymsWorkingDay, String specialityName, String learningResultCode, String programCode, String version, String competitionCode) throws ViewedResultsDaoException;

	/** 
	 * Returns all rows from the viewed_results table that match the criteria ''.
	 */
	public ViewedResults[] findAll() throws ViewedResultsDaoException;

	/** 
	 * Returns all rows from the viewed_results table that match the criteria 'number_Ficha = :numberFicha AND quarter_Name = :quarterName AND acronyms_Working_Day = :acronymsWorkingDay AND speciality_Name = :specialityName'.
	 */
	public ViewedResults[] findByFichaHasTrimester(String numberFicha, String quarterName, String acronymsWorkingDay, String specialityName) throws ViewedResultsDaoException;

	/** 
	 * Returns all rows from the viewed_results table that match the criteria 'Learning_Result_Code = :learningResultCode AND Program_Code = :programCode AND Version = :version AND Competition_Code = :competitionCode'.
	 */
	public ViewedResults[] findByLearningResult(String learningResultCode, String programCode, String version, String competitionCode) throws ViewedResultsDaoException;

	/** 
	 * Returns all rows from the viewed_results table that match the criteria 'number_Ficha = :numberFicha'.
	 */
	public ViewedResults[] findWhereNumberFichaEquals(String numberFicha) throws ViewedResultsDaoException;

	/** 
	 * Returns all rows from the viewed_results table that match the criteria 'quarter_Name = :quarterName'.
	 */
	public ViewedResults[] findWhereQuarterNameEquals(String quarterName) throws ViewedResultsDaoException;

	/** 
	 * Returns all rows from the viewed_results table that match the criteria 'acronyms_Working_Day = :acronymsWorkingDay'.
	 */
	public ViewedResults[] findWhereAcronymsWorkingDayEquals(String acronymsWorkingDay) throws ViewedResultsDaoException;

	/** 
	 * Returns all rows from the viewed_results table that match the criteria 'speciality_Name = :specialityName'.
	 */
	public ViewedResults[] findWhereSpecialityNameEquals(String specialityName) throws ViewedResultsDaoException;

	/** 
	 * Returns all rows from the viewed_results table that match the criteria 'Learning_Result_Code = :learningResultCode'.
	 */
	public ViewedResults[] findWhereLearningResultCodeEquals(String learningResultCode) throws ViewedResultsDaoException;

	/** 
	 * Returns all rows from the viewed_results table that match the criteria 'Program_Code = :programCode'.
	 */
	public ViewedResults[] findWhereProgramCodeEquals(String programCode) throws ViewedResultsDaoException;

	/** 
	 * Returns all rows from the viewed_results table that match the criteria 'Competition_Code = :competitionCode'.
	 */
	public ViewedResults[] findWhereCompetitionCodeEquals(String competitionCode) throws ViewedResultsDaoException;

	/** 
	 * Returns all rows from the viewed_results table that match the criteria 'Version = :version'.
	 */
	public ViewedResults[] findWhereVersionEquals(String version) throws ViewedResultsDaoException;

	/** 
	 * Sets the value of maxRows
	 */
	public void setMaxRows(int maxRows);

	/** 
	 * Gets the value of maxRows
	 */
	public int getMaxRows();

	/** 
	 * Returns all rows from the viewed_results table that match the specified arbitrary SQL statement
	 */
	public ViewedResults[] findByDynamicSelect(String sql, Object[] sqlParams) throws ViewedResultsDaoException;

	/** 
	 * Returns all rows from the viewed_results table that match the specified arbitrary SQL statement
	 */
	public ViewedResults[] findByDynamicWhere(String sql, Object[] sqlParams) throws ViewedResultsDaoException;

}
