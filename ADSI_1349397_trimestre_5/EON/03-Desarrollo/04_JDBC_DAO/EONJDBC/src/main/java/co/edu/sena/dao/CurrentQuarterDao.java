/*
 * This source file was generated by FireStorm/DAO.
 * 
 * If you purchase a full license for FireStorm/DAO you can customize this header file.
 * 
 * For more information please visit http://www.codefutures.com/products/firestorm
 */

package co.edu.sena.dao;

import java.util.Date;
import co.edu.sena.dto.*;
import co.edu.sena.exceptions.*;

public interface CurrentQuarterDao
{
	/** 
	 * Inserts a new row in the current_quarter table.
	 */
	public CurrentQuarterPk insert(CurrentQuarter dto) throws CurrentQuarterDaoException;

	/** 
	 * Updates a single row in the current_quarter table.
	 */
	public void update(CurrentQuarterPk pk, CurrentQuarter dto) throws CurrentQuarterDaoException;

	/** 
	 * Deletes a single row in the current_quarter table.
	 */
	public void delete(CurrentQuarterPk pk) throws CurrentQuarterDaoException;

	/** 
	 * Returns the rows from the current_quarter table that matches the specified primary-key value.
	 */
	public CurrentQuarter findByPrimaryKey(CurrentQuarterPk pk) throws CurrentQuarterDaoException;

	/** 
	 * Returns all rows from the current_quarter table that match the criteria 'idCurrent_Quarter = :idcurrentQuarter'.
	 */
	public CurrentQuarter findByPrimaryKey(String idcurrentQuarter) throws CurrentQuarterDaoException;

	/** 
	 * Returns all rows from the current_quarter table that match the criteria ''.
	 */
	public CurrentQuarter[] findAll() throws CurrentQuarterDaoException;

	/** 
	 * Returns all rows from the current_quarter table that match the criteria 'idCurrent_Quarter = :idcurrentQuarter'.
	 */
	public CurrentQuarter[] findWhereIdcurrentQuarterEquals(String idcurrentQuarter) throws CurrentQuarterDaoException;

	/** 
	 * Returns all rows from the current_quarter table that match the criteria 'start_Date = :startDate'.
	 */
	public CurrentQuarter[] findWhereStartDateEquals(Date startDate) throws CurrentQuarterDaoException;

	/** 
	 * Returns all rows from the current_quarter table that match the criteria 'end_Date = :endDate'.
	 */
	public CurrentQuarter[] findWhereEndDateEquals(Date endDate) throws CurrentQuarterDaoException;

	/** 
	 * Sets the value of maxRows
	 */
	public void setMaxRows(int maxRows);

	/** 
	 * Gets the value of maxRows
	 */
	public int getMaxRows();

	/** 
	 * Returns all rows from the current_quarter table that match the specified arbitrary SQL statement
	 */
	public CurrentQuarter[] findByDynamicSelect(String sql, Object[] sqlParams) throws CurrentQuarterDaoException;

	/** 
	 * Returns all rows from the current_quarter table that match the specified arbitrary SQL statement
	 */
	public CurrentQuarter[] findByDynamicWhere(String sql, Object[] sqlParams) throws CurrentQuarterDaoException;

}
