/*
 * This source file was generated by FireStorm/DAO.
 * 
 * If you purchase a full license for FireStorm/DAO you can customize this header file.
 * 
 * For more information please visit http://www.codefutures.com/products/firestorm
 */

package co.edu.sena.dao;

import java.util.Date;
import co.edu.sena.dto.*;
import co.edu.sena.exceptions.*;

public interface FichaDao
{
	/** 
	 * Inserts a new row in the ficha table.
	 */
	public FichaPk insert(Ficha dto) throws FichaDaoException;

	/** 
	 * Updates a single row in the ficha table.
	 */
	public void update(FichaPk pk, Ficha dto) throws FichaDaoException;

	/** 
	 * Deletes a single row in the ficha table.
	 */
	public void delete(FichaPk pk) throws FichaDaoException;

	/** 
	 * Returns the rows from the ficha table that matches the specified primary-key value.
	 */
	public Ficha findByPrimaryKey(FichaPk pk) throws FichaDaoException;

	/** 
	 * Returns all rows from the ficha table that match the criteria 'number_Ficha = :numberFicha'.
	 */
	public Ficha findByPrimaryKey(String numberFicha) throws FichaDaoException;

	/** 
	 * Returns all rows from the ficha table that match the criteria ''.
	 */
	public Ficha[] findAll() throws FichaDaoException;

	/** 
	 * Returns all rows from the ficha table that match the criteria 'Program_Code = :programCode AND Version = :version'.
	 */
	public Ficha[] findByProgram(String programCode, String version) throws FichaDaoException;

	/** 
	 * Returns all rows from the ficha table that match the criteria 'name_State = :nameState'.
	 */
	public Ficha[] findByStatusFicha(String nameState) throws FichaDaoException;

	/** 
	 * Returns all rows from the ficha table that match the criteria 'number_Ficha = :numberFicha'.
	 */
	public Ficha[] findWhereNumberFichaEquals(String numberFicha) throws FichaDaoException;

	/** 
	 * Returns all rows from the ficha table that match the criteria 'start_Date = :startDate'.
	 */
	public Ficha[] findWhereStartDateEquals(Date startDate) throws FichaDaoException;

	/** 
	 * Returns all rows from the ficha table that match the criteria 'end_Date = :endDate'.
	 */
	public Ficha[] findWhereEndDateEquals(Date endDate) throws FichaDaoException;

	/** 
	 * Returns all rows from the ficha table that match the criteria 'Route = :route'.
	 */
	public Ficha[] findWhereRouteEquals(String route) throws FichaDaoException;

	/** 
	 * Returns all rows from the ficha table that match the criteria 'Program_Code = :programCode'.
	 */
	public Ficha[] findWhereProgramCodeEquals(String programCode) throws FichaDaoException;

	/** 
	 * Returns all rows from the ficha table that match the criteria 'Version = :version'.
	 */
	public Ficha[] findWhereVersionEquals(String version) throws FichaDaoException;

	/** 
	 * Returns all rows from the ficha table that match the criteria 'name_State = :nameState'.
	 */
	public Ficha[] findWhereNameStateEquals(String nameState) throws FichaDaoException;

	/** 
	 * Sets the value of maxRows
	 */
	public void setMaxRows(int maxRows);

	/** 
	 * Gets the value of maxRows
	 */
	public int getMaxRows();

	/** 
	 * Returns all rows from the ficha table that match the specified arbitrary SQL statement
	 */
	public Ficha[] findByDynamicSelect(String sql, Object[] sqlParams) throws FichaDaoException;

	/** 
	 * Returns all rows from the ficha table that match the specified arbitrary SQL statement
	 */
	public Ficha[] findByDynamicWhere(String sql, Object[] sqlParams) throws FichaDaoException;

}
