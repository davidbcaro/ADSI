/*
 * This source file was generated by FireStorm/DAO.
 * 
 * If you purchase a full license for FireStorm/DAO you can customize this header file.
 * 
 * For more information please visit http://www.codefutures.com/products/firestorm
 */

package co.edu.sena.dao;

import co.edu.sena.dto.*;
import co.edu.sena.exceptions.*;

public interface AmbienceDao
{
	/** 
	 * Inserts a new row in the ambience table.
	 */
	public AmbiencePk insert(Ambience dto) throws AmbienceDaoException;

	/** 
	 * Updates a single row in the ambience table.
	 */
	public void update(AmbiencePk pk, Ambience dto) throws AmbienceDaoException;

	/** 
	 * Deletes a single row in the ambience table.
	 */
	public void delete(AmbiencePk pk) throws AmbienceDaoException;

	/** 
	 * Returns the rows from the ambience table that matches the specified primary-key value.
	 */
	public Ambience findByPrimaryKey(AmbiencePk pk) throws AmbienceDaoException;

	/** 
	 * Returns all rows from the ambience table that match the criteria 'name_Headquarters = :nameHeadquarters AND number_Ambience = :numberAmbience'.
	 */
	public Ambience findByPrimaryKey(String nameHeadquarters, String numberAmbience) throws AmbienceDaoException;

	/** 
	 * Returns all rows from the ambience table that match the criteria ''.
	 */
	public Ambience[] findAll() throws AmbienceDaoException;

	/** 
	 * Returns all rows from the ambience table that match the criteria 'name_Headquarters = :nameHeadquarters'.
	 */
	public Ambience[] findByHeadquarters(String nameHeadquarters) throws AmbienceDaoException;

	/** 
	 * Returns all rows from the ambience table that match the criteria 'number_Ambience = :numberAmbience'.
	 */
	public Ambience[] findWhereNumberAmbienceEquals(String numberAmbience) throws AmbienceDaoException;

	/** 
	 * Returns all rows from the ambience table that match the criteria 'Description = :description'.
	 */
	public Ambience[] findWhereDescriptionEquals(String description) throws AmbienceDaoException;

	/** 
	 * Returns all rows from the ambience table that match the criteria 'Status = :status'.
	 */
	public Ambience[] findWhereStatusEquals(short status) throws AmbienceDaoException;

	/** 
	 * Returns all rows from the ambience table that match the criteria 'name_Headquarters = :nameHeadquarters'.
	 */
	public Ambience[] findWhereNameHeadquartersEquals(String nameHeadquarters) throws AmbienceDaoException;

	/** 
	 * Sets the value of maxRows
	 */
	public void setMaxRows(int maxRows);

	/** 
	 * Gets the value of maxRows
	 */
	public int getMaxRows();

	/** 
	 * Returns all rows from the ambience table that match the specified arbitrary SQL statement
	 */
	public Ambience[] findByDynamicSelect(String sql, Object[] sqlParams) throws AmbienceDaoException;

	/** 
	 * Returns all rows from the ambience table that match the specified arbitrary SQL statement
	 */
	public Ambience[] findByDynamicWhere(String sql, Object[] sqlParams) throws AmbienceDaoException;

}
