/*
 * This source file was generated by FireStorm/DAO.
 * 
 * If you purchase a full license for FireStorm/DAO you can customize this header file.
 * 
 * For more information please visit http://www.codefutures.com/products/firestorm
 */

package co.edu.sena.controler.prueba;

import java.math.*;
import java.util.Date;
import java.util.Collection;
import co.edu.sena.controler.dao.dao.ActivityDao;
import co.edu.sena.controler.dao.dto.Activity;
import co.edu.sena.controler.dao.exceptions.ActivityDaoException;
import co.edu.sena.controler.dao.factory.ActivityDaoFactory;

public class ActivityDaoSample
{
	/**
	 * Method 'main'
	 * 
	 * @param arg
	 * @throws Exception
	 */
	public static void main(String[] arg) throws Exception
	{
		// Uncomment one of the lines below to test the generated code
		
		// findAll();
		// findByPhaseProject("", "");
		// findWhereIdActivityEquals("");
		// findWhereNameActivityEquals("");
		// findWhereNamePhaseEquals("");
		// findWhereProjectCodeEquals("");
	}

	/**
	 * Method 'findAll'
	 * 
	 */
	public static void findAll()
	{
		try {
			ActivityDao _dao = getActivityDao();
			Activity _result[] = _dao.findAll();
			for (int i=0; i<_result.length; i++ ) {
				display( _result[i] );
			}
		
		}
		catch (Exception _e) {
			_e.printStackTrace();
		}
		
	}

	/**
	 * Method 'findByPhaseProject'
	 * 
	 * @param namePhase
	 * @param projectCode
	 */
	public static void findByPhaseProject(String namePhase, String projectCode)
	{
		try {
			ActivityDao _dao = getActivityDao();
			Activity _result[] = _dao.findByPhaseProject(namePhase, projectCode);
			for (int i=0; i<_result.length; i++ ) {
				display( _result[i] );
			}
		
		}
		catch (Exception _e) {
			_e.printStackTrace();
		}
		
	}

	/**
	 * Method 'findWhereIdActivityEquals'
	 * 
	 * @param idActivity
	 */
	public static void findWhereIdActivityEquals(String idActivity)
	{
		try {
			ActivityDao _dao = getActivityDao();
			Activity _result[] = _dao.findWhereIdActivityEquals(idActivity);
			for (int i=0; i<_result.length; i++ ) {
				display( _result[i] );
			}
		
		}
		catch (Exception _e) {
			_e.printStackTrace();
		}
		
	}

	/**
	 * Method 'findWhereNameActivityEquals'
	 * 
	 * @param nameActivity
	 */
	public static void findWhereNameActivityEquals(String nameActivity)
	{
		try {
			ActivityDao _dao = getActivityDao();
			Activity _result[] = _dao.findWhereNameActivityEquals(nameActivity);
			for (int i=0; i<_result.length; i++ ) {
				display( _result[i] );
			}
		
		}
		catch (Exception _e) {
			_e.printStackTrace();
		}
		
	}

	/**
	 * Method 'findWhereNamePhaseEquals'
	 * 
	 * @param namePhase
	 */
	public static void findWhereNamePhaseEquals(String namePhase)
	{
		try {
			ActivityDao _dao = getActivityDao();
			Activity _result[] = _dao.findWhereNamePhaseEquals(namePhase);
			for (int i=0; i<_result.length; i++ ) {
				display( _result[i] );
			}
		
		}
		catch (Exception _e) {
			_e.printStackTrace();
		}
		
	}

	/**
	 * Method 'findWhereProjectCodeEquals'
	 * 
	 * @param projectCode
	 */
	public static void findWhereProjectCodeEquals(String projectCode)
	{
		try {
			ActivityDao _dao = getActivityDao();
			Activity _result[] = _dao.findWhereProjectCodeEquals(projectCode);
			for (int i=0; i<_result.length; i++ ) {
				display( _result[i] );
			}
		
		}
		catch (Exception _e) {
			_e.printStackTrace();
		}
		
	}

	/**
	 * Method 'getActivityDao'
	 * 
	 * @return ActivityDao
	 */
	public static ActivityDao getActivityDao()
	{
		return ActivityDaoFactory.create();
	}

	/**
	 * Method 'display'
	 * 
	 * @param dto
	 */
	public static void display(Activity dto)
	{
		StringBuffer buf = new StringBuffer();
		buf.append( dto.getIdActivity() );
		buf.append( ", " );
		buf.append( dto.getNameActivity() );
		buf.append( ", " );
		buf.append( dto.getNamePhase() );
		buf.append( ", " );
		buf.append( dto.getProjectCode() );
		System.out.println( buf.toString() );
	}

}
