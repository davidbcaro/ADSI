/*
 * This source file was generated by FireStorm/DAO.
 * 
 * If you purchase a full license for FireStorm/DAO you can customize this header file.
 * 
 * For more information please visit http://www.codefutures.com/products/firestorm
 */

package co.edu.sena.controler.dao.dao;

import java.util.Date;
import co.edu.sena.controler.dao.dto.*;
import co.edu.sena.controler.dao.exceptions.*;

public interface GroupNumberDao
{
	/** 
	 * Inserts a new row in the group_number table.
	 */
	public GroupNumberPk insert(GroupNumber dto) throws GroupNumberDaoException;

	/** 
	 * Updates a single row in the group_number table.
	 */
	public void update(GroupNumberPk pk, GroupNumber dto) throws GroupNumberDaoException;

	/** 
	 * Deletes a single row in the group_number table.
	 */
	public void delete(GroupNumberPk pk) throws GroupNumberDaoException;

	/** 
	 * Returns the rows from the group_number table that matches the specified primary-key value.
	 */
	public GroupNumber findByPrimaryKey(GroupNumberPk pk) throws GroupNumberDaoException;

	/** 
	 * Returns all rows from the group_number table that match the criteria 'groups_number = :groupsNumber'.
	 */
	public GroupNumber findByPrimaryKey(String groupsNumber) throws GroupNumberDaoException;

	/** 
	 * Returns all rows from the group_number table that match the criteria ''.
	 */
	public GroupNumber[] findAll() throws GroupNumberDaoException;

	/** 
	 * Returns all rows from the group_number table that match the criteria 'program_code = :programCode AND version_code = :versionCode'.
	 */
	public GroupNumber[] findByProgram(String programCode, String versionCode) throws GroupNumberDaoException;

	/** 
	 * Returns all rows from the group_number table that match the criteria 'status_group_number = :statusGroupNumber'.
	 */
	public GroupNumber[] findByStatusGroupNumber(String statusGroupNumber) throws GroupNumberDaoException;

	/** 
	 * Returns all rows from the group_number table that match the criteria 'groups_number = :groupsNumber'.
	 */
	public GroupNumber[] findWhereGroupsNumberEquals(String groupsNumber) throws GroupNumberDaoException;

	/** 
	 * Returns all rows from the group_number table that match the criteria 'start_date = :startDate'.
	 */
	public GroupNumber[] findWhereStartDateEquals(Date startDate) throws GroupNumberDaoException;

	/** 
	 * Returns all rows from the group_number table that match the criteria 'finish_date = :finishDate'.
	 */
	public GroupNumber[] findWhereFinishDateEquals(Date finishDate) throws GroupNumberDaoException;

	/** 
	 * Returns all rows from the group_number table that match the criteria 'route = :route'.
	 */
	public GroupNumber[] findWhereRouteEquals(String route) throws GroupNumberDaoException;

	/** 
	 * Returns all rows from the group_number table that match the criteria 'program_code = :programCode'.
	 */
	public GroupNumber[] findWhereProgramCodeEquals(String programCode) throws GroupNumberDaoException;

	/** 
	 * Returns all rows from the group_number table that match the criteria 'version_code = :versionCode'.
	 */
	public GroupNumber[] findWhereVersionCodeEquals(String versionCode) throws GroupNumberDaoException;

	/** 
	 * Returns all rows from the group_number table that match the criteria 'status_group_number = :statusGroupNumber'.
	 */
	public GroupNumber[] findWhereStatusGroupNumberEquals(String statusGroupNumber) throws GroupNumberDaoException;

	/** 
	 * Sets the value of maxRows
	 */
	public void setMaxRows(int maxRows);

	/** 
	 * Gets the value of maxRows
	 */
	public int getMaxRows();

	/** 
	 * Returns all rows from the group_number table that match the specified arbitrary SQL statement
	 */
	public GroupNumber[] findByDynamicSelect(String sql, Object[] sqlParams) throws GroupNumberDaoException;

	/** 
	 * Returns all rows from the group_number table that match the specified arbitrary SQL statement
	 */
	public GroupNumber[] findByDynamicWhere(String sql, Object[] sqlParams) throws GroupNumberDaoException;

}
