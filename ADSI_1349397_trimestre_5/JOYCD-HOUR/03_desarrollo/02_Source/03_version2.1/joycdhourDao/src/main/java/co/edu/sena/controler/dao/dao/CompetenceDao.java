/*
 * This source file was generated by FireStorm/DAO.
 * 
 * If you purchase a full license for FireStorm/DAO you can customize this header file.
 * 
 * For more information please visit http://www.codefutures.com/products/firestorm
 */

package co.edu.sena.controler.dao.dao;

import co.edu.sena.controler.dao.dto.*;
import co.edu.sena.controler.dao.exceptions.*;

public interface CompetenceDao
{
	/** 
	 * Inserts a new row in the competence table.
	 */
	public CompetencePk insert(Competence dto) throws CompetenceDaoException;

	/** 
	 * Updates a single row in the competence table.
	 */
	public void update(CompetencePk pk, Competence dto) throws CompetenceDaoException;

	/** 
	 * Deletes a single row in the competence table.
	 */
	public void delete(CompetencePk pk) throws CompetenceDaoException;

	/** 
	 * Returns the rows from the competence table that matches the specified primary-key value.
	 */
	public Competence findByPrimaryKey(CompetencePk pk) throws CompetenceDaoException;

	/** 
	 * Returns all rows from the competence table that match the criteria 'competence_code = :competenceCode AND program_code = :programCode AND version = :version'.
	 */
	public Competence findByPrimaryKey(String competenceCode, String programCode, String version) throws CompetenceDaoException;

	/** 
	 * Returns all rows from the competence table that match the criteria ''.
	 */
	public Competence[] findAll() throws CompetenceDaoException;

	/** 
	 * Returns all rows from the competence table that match the criteria 'program_code = :programCode AND version = :version'.
	 */
	public Competence[] findByProgram(String programCode, String version) throws CompetenceDaoException;

	/** 
	 * Returns all rows from the competence table that match the criteria 'competence_code = :competenceCode'.
	 */
	public Competence[] findWhereCompetenceCodeEquals(String competenceCode) throws CompetenceDaoException;

	/** 
	 * Returns all rows from the competence table that match the criteria 'description = :description'.
	 */
	public Competence[] findWhereDescriptionEquals(String description) throws CompetenceDaoException;

	/** 
	 * Returns all rows from the competence table that match the criteria 'program_code = :programCode'.
	 */
	public Competence[] findWhereProgramCodeEquals(String programCode) throws CompetenceDaoException;

	/** 
	 * Returns all rows from the competence table that match the criteria 'version = :version'.
	 */
	public Competence[] findWhereVersionEquals(String version) throws CompetenceDaoException;

	/** 
	 * Sets the value of maxRows
	 */
	public void setMaxRows(int maxRows);

	/** 
	 * Gets the value of maxRows
	 */
	public int getMaxRows();

	/** 
	 * Returns all rows from the competence table that match the specified arbitrary SQL statement
	 */
	public Competence[] findByDynamicSelect(String sql, Object[] sqlParams) throws CompetenceDaoException;

	/** 
	 * Returns all rows from the competence table that match the specified arbitrary SQL statement
	 */
	public Competence[] findByDynamicWhere(String sql, Object[] sqlParams) throws CompetenceDaoException;

}
