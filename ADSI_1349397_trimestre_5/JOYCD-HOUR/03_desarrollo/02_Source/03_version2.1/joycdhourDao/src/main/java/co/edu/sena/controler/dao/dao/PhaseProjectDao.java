/*
 * This source file was generated by FireStorm/DAO.
 * 
 * If you purchase a full license for FireStorm/DAO you can customize this header file.
 * 
 * For more information please visit http://www.codefutures.com/products/firestorm
 */

package co.edu.sena.controler.dao.dao;

import co.edu.sena.controler.dao.dto.*;
import co.edu.sena.controler.dao.exceptions.*;

public interface PhaseProjectDao
{
	/** 
	 * Inserts a new row in the phase_project table.
	 */
	public PhaseProjectPk insert(PhaseProject dto) throws PhaseProjectDaoException;

	/** 
	 * Updates a single row in the phase_project table.
	 */
	public void update(PhaseProjectPk pk, PhaseProject dto) throws PhaseProjectDaoException;

	/** 
	 * Deletes a single row in the phase_project table.
	 */
	public void delete(PhaseProjectPk pk) throws PhaseProjectDaoException;

	/** 
	 * Returns the rows from the phase_project table that matches the specified primary-key value.
	 */
	public PhaseProject findByPrimaryKey(PhaseProjectPk pk) throws PhaseProjectDaoException;

	/** 
	 * Returns all rows from the phase_project table that match the criteria 'name_phase = :namePhase AND project_code = :projectCode'.
	 */
	public PhaseProject findByPrimaryKey(String namePhase, String projectCode) throws PhaseProjectDaoException;

	/** 
	 * Returns all rows from the phase_project table that match the criteria ''.
	 */
	public PhaseProject[] findAll() throws PhaseProjectDaoException;

	/** 
	 * Returns all rows from the phase_project table that match the criteria 'project_code = :projectCode'.
	 */
	public PhaseProject[] findByProject(String projectCode) throws PhaseProjectDaoException;

	/** 
	 * Returns all rows from the phase_project table that match the criteria 'name_phase = :namePhase'.
	 */
	public PhaseProject[] findWhereNamePhaseEquals(String namePhase) throws PhaseProjectDaoException;

	/** 
	 * Returns all rows from the phase_project table that match the criteria 'status_phase = :statusPhase'.
	 */
	public PhaseProject[] findWhereStatusPhaseEquals(String statusPhase) throws PhaseProjectDaoException;

	/** 
	 * Returns all rows from the phase_project table that match the criteria 'project_code = :projectCode'.
	 */
	public PhaseProject[] findWhereProjectCodeEquals(String projectCode) throws PhaseProjectDaoException;

	/** 
	 * Sets the value of maxRows
	 */
	public void setMaxRows(int maxRows);

	/** 
	 * Gets the value of maxRows
	 */
	public int getMaxRows();

	/** 
	 * Returns all rows from the phase_project table that match the specified arbitrary SQL statement
	 */
	public PhaseProject[] findByDynamicSelect(String sql, Object[] sqlParams) throws PhaseProjectDaoException;

	/** 
	 * Returns all rows from the phase_project table that match the specified arbitrary SQL statement
	 */
	public PhaseProject[] findByDynamicWhere(String sql, Object[] sqlParams) throws PhaseProjectDaoException;

}
