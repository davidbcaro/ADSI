/*
 * This source file was generated by FireStorm/DAO.
 * 
 * If you purchase a full license for FireStorm/DAO you can customize this header file.
 * 
 * For more information please visit http://www.codefutures.com/products/firestorm
 */

package co.edu.sena.controler.dao.dao;

import co.edu.sena.controler.dao.dto.*;
import co.edu.sena.controler.dao.exceptions.*;

public interface DayDao
{
	/** 
	 * Inserts a new row in the day table.
	 */
	public DayPk insert(Day dto) throws DayDaoException;

	/** 
	 * Updates a single row in the day table.
	 */
	public void update(DayPk pk, Day dto) throws DayDaoException;

	/** 
	 * Deletes a single row in the day table.
	 */
	public void delete(DayPk pk) throws DayDaoException;

	/** 
	 * Returns the rows from the day table that matches the specified primary-key value.
	 */
	public Day findByPrimaryKey(DayPk pk) throws DayDaoException;

	/** 
	 * Returns all rows from the day table that match the criteria 'name_day = :nameDay'.
	 */
	public Day findByPrimaryKey(String nameDay) throws DayDaoException;

	/** 
	 * Returns all rows from the day table that match the criteria ''.
	 */
	public Day[] findAll() throws DayDaoException;

	/** 
	 * Returns all rows from the day table that match the criteria 'name_day = :nameDay'.
	 */
	public Day[] findWhereNameDayEquals(String nameDay) throws DayDaoException;

	/** 
	 * Returns all rows from the day table that match the criteria 'status = :status'.
	 */
	public Day[] findWhereStatusEquals(short status) throws DayDaoException;

	/** 
	 * Sets the value of maxRows
	 */
	public void setMaxRows(int maxRows);

	/** 
	 * Gets the value of maxRows
	 */
	public int getMaxRows();

	/** 
	 * Returns all rows from the day table that match the specified arbitrary SQL statement
	 */
	public Day[] findByDynamicSelect(String sql, Object[] sqlParams) throws DayDaoException;

	/** 
	 * Returns all rows from the day table that match the specified arbitrary SQL statement
	 */
	public Day[] findByDynamicWhere(String sql, Object[] sqlParams) throws DayDaoException;

}
